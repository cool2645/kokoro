{"version":3,"file":"kokoro.esm.js","sources":["../src/constants.js","../src/actions/player.js","../src/actions/playing.js","../src/actions/playlist.js","../src/helpers/song.js","../src/helpers/playlist.js","../src/index.js"],"sourcesContent":["export const LYRICS_TYPE_LRC = 'lrc'\nexport const LYRICS_TYPE_L2C = 'l2c'\nexport const PLAY_ORDER_LOOP = 'PLAY_ORDER_LOOP'\nexport const PLAY_ORDER_SINGLE = 'PLAY_ORDER_SINGLE'\nexport const PLAY_ORDER_RANDOM = 'PLAY_ORDER_RANDOM'\nexport const PLAY_ORDER = [\n  PLAY_ORDER_LOOP,\n  PLAY_ORDER_RANDOM,\n  PLAY_ORDER_SINGLE\n]\n","export const SET_VOLUME = 'SET_VOLUME'\nexport const SET_SPEED = 'SET_SPEED'\n\nexport function setVolume (volume) {\n  return {\n    type: SET_VOLUME,\n    payload: volume\n  }\n}\n\nexport function setSpeed (speed) {\n  return {\n    type: SET_SPEED,\n    payload: speed\n  }\n}\n","export const PAUSE = 'PAUSE'\nexport const PLAY = 'PLAY'\nexport const TOGGLE_PLAY = 'TOGGLE_PLAY'\nexport const SET_CURRENT_TIME = 'SET_CURRENT_TIME'\n\nexport function pause () {\n  return {\n    type: PAUSE\n  }\n}\n\nexport function play () {\n  return {\n    type: PLAY\n  }\n}\n\nexport function togglePlay () {\n  return {\n    type: TOGGLE_PLAY\n  }\n}\n\nexport function setCurrentTime (time) {\n  return {\n    type: SET_CURRENT_TIME,\n    payload: time\n  }\n}\n","export const SET_PLAYLIST = 'SET_PLAYLIST'\nexport const CLEAR_PLAYLIST = 'CLEAR_PLAYLIST'\n\nexport function setPlayOrder (playOrder) {\n\n}\n\nexport function nextPlayOrder () {\n\n}\nexport function setCurrentSong (songOrIndex) {\n\n}\n\nexport function setNextSong (songOrIndex) {\n\n}\n\nexport function removeSong (songOrIndex) {\n\n}\n\nexport function setPlaylist (playlist, currentSong, playOrder) {\n\n}\n\nexport function clearPlaylist () {\n\n}\n\nexport function next () {\n\n}\n\nexport function previous () {\n\n}\n","export class Song {\n  static id (song) {\n    Song.validate(song)\n    return song.src instanceof Array\n      ? song.src[0]\n      : song.src\n  }\n\n  static validate (song) {\n    if (!song || typeof song !== 'object') {\n      throw new TypeError('song is not an object')\n    }\n    let src\n    if (song.src instanceof Array) {\n      if (!song.src.length) {\n        throw new TypeError('invalid song object: src is an empty array')\n      }\n      src = song.src[0]\n    } else {\n      src = song.src\n    }\n    if (typeof src !== 'string') {\n      throw new TypeError('invalid song object: src must be a string or string array')\n    }\n    if (!src) {\n      throw new TypeError('invalid song object: src cannot be an empty string')\n    }\n    return true\n  }\n}\n","import { Song } from './song'\nimport { PLAY_ORDER } from '../constants'\n\nexport class Playlist {\n  static validate (playlist) {\n    if (!(playlist.playlist instanceof Array)) {\n      throw new TypeError('playlist must be an array')\n    }\n    if (!(playlist.randomPool instanceof Array)) {\n      throw new TypeError('randomPool must be an array')\n    }\n    if (!(playlist.coolDownPool instanceof Array)) {\n      throw new TypeError('coolDownPool must be an array')\n    }\n    const merged = [...playlist.randomPool, ...playlist.coolDownPool]\n      .sort((a, b) => Song.id(a).localeCompare(Song.id(b)))\n    const original = [...playlist.playlist]\n      .sort((a, b) => Song.id(a).localeCompare(Song.id(b)))\n    if (merged.length !== original.length) {\n      throw new TypeError('the union of randomPool and cooldownPool must be exactly the same as playlist')\n    }\n    for (let i = 0; i < merged.length; i++) {\n      if (Song.id(merged[i]) !== Song.id(original[i])) {\n        throw new TypeError('the union of randomPool and cooldownPool must be exactly the same as playlist')\n      }\n    }\n    if (playlist.playlist.length) {\n      if (!playlist.playing) {\n        throw new TypeError('playing is required when playlist is non-empty')\n      }\n      Song.validate(playlist.playing)\n    } else {\n      if (playlist.playing) {\n        throw new TypeError('playing must be null when playlist is empty')\n      }\n    }\n    if (playlist.playOrder && [...PLAY_ORDER].indexOf(playlist.playOrder) === -1) {\n      throw new TypeError('playOrder must be one of ' + PLAY_ORDER.toString())\n    }\n  }\n}\n","const defaultOptions = {\n  storageKey: 'kokoro-store',\n  audioTagId: 'kokoro-sevice'\n}\n\nexport class Kokoro {\n  get ref () {\n    return this._ref\n  }\n\n  constructor (options) {\n    const op = Object.assign({}, defaultOptions, options)\n    this._storageKey = op.storageKey\n    this._mount(op.audioTagId)\n  }\n\n  destroy () {\n    this._destroyed = true\n    this._unmount()\n  }\n\n  _mount (id) {\n    this._ref = document.createElement('audio')\n    if (id) this._ref.id = id\n    document.body.appendChild(this._ref)\n  }\n\n  _unmount () {\n    this._ref.remove()\n  }\n}\n\nexport default Kokoro\n\nexport * from './constants'\nexport * as actions from './actions'\nexport * as helpers from './helpers'\n"],"names":["LYRICS_TYPE_LRC","LYRICS_TYPE_L2C","PLAY_ORDER_LOOP","PLAY_ORDER_SINGLE","PLAY_ORDER_RANDOM","PLAY_ORDER","SET_VOLUME","SET_SPEED","setVolume","volume","type","payload","setSpeed","speed","PAUSE","PLAY","TOGGLE_PLAY","SET_CURRENT_TIME","pause","play","togglePlay","setCurrentTime","time","SET_PLAYLIST","CLEAR_PLAYLIST","setPlayOrder","playOrder","nextPlayOrder","setCurrentSong","songOrIndex","setNextSong","removeSong","setPlaylist","playlist","currentSong","clearPlaylist","next","previous","Song","song","validate","src","Array","TypeError","length","Playlist","randomPool","coolDownPool","merged","sort","a","b","id","localeCompare","original","i","playing","indexOf","toString","defaultOptions","storageKey","audioTagId","Kokoro","_ref","options","op","Object","assign","_storageKey","_mount","_destroyed","_unmount","document","createElement","body","appendChild","remove"],"mappings":"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"}