{"version":3,"file":"kokoro.esm.js","sources":["../src/helpers.js","../src/actions/player.js","../src/actions/playing.js","../src/constants.js","../src/actions/playlist.js","../src/reducers/player.js","../src/reducers/playlist.js","../src/reducers/playing.js","../src/reducers/index.js","../src/index.js"],"sourcesContent":["export class Song {\n  static id (song) {\n    let src = song.src instanceof Array\n      ? encodeURI(song.src[0])\n      : encodeURI(song.src)\n\n    let good = decodeURI(src)\n    while (good !== src) {\n      src = good\n      good = decodeURI(src)\n    }\n    return encodeURI(good)\n  }\n}\n\nexport class TimeRanges {\n  static toArray (timeRanges) {\n    const length = timeRanges.length\n    const arr = []\n    for (let i = 0; i < length; i++) {\n      arr.push([\n        timeRanges.start(i),\n        timeRanges.end(i)\n      ])\n    }\n    return arr\n  }\n}\n\nexport function cloneDeep (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n","export const SET_VOLUME = 'SET_VOLUME'\nexport const SET_SPEED = 'SET_SPEED'\n\nexport function setVolume (volume) {\n  return {\n    type: SET_VOLUME,\n    payload: volume\n  }\n}\n\nexport function setSpeed (speedRate) {\n  return {\n    type: SET_SPEED,\n    payload: speedRate\n  }\n}\n","export const PAUSE = 'PAUSE'\nexport const PLAY = 'PLAY'\nexport const SET_CURRENT_TIME = 'SET_CURRENT_TIME'\nexport const SET_TOTAL_TIME = 'SET_TOTAL_TIME'\nexport const SET_BUFFERED_TIME = 'SET_BUFFERED_TIME'\nexport const SET_TIMES = 'SET_TIMES'\nexport const NEXT_SRC = 'NEXT_SRC'\nexport const UPDATE_SONG = 'UPDATE_SONG'\n\nexport function pause () {\n  return {\n    type: PAUSE\n  }\n}\n\nexport function play () {\n  return {\n    type: PLAY\n  }\n}\n\nexport function setCurrentTime (time) {\n  return {\n    type: SET_CURRENT_TIME,\n    payload: time\n  }\n}\n\nexport function setTotalTime (time) {\n  return {\n    type: SET_TOTAL_TIME,\n    payload: time\n  }\n}\n\nexport function setBufferedTime (buffered) {\n  return {\n    type: SET_BUFFERED_TIME,\n    payload: buffered\n  }\n}\n\nexport function setTimes (times) {\n  return {\n    type: SET_TIMES,\n    payload: times\n  }\n}\n\nexport function nextSrc () {\n  return {\n    type: NEXT_SRC\n  }\n}\n\nexport function updateSong (song) {\n  return {\n    type: UPDATE_SONG,\n    payload: song\n  }\n}\n","export const PLAY_ORDER_LOOP = 'PLAY_ORDER_LOOP'\nexport const PLAY_ORDER_SINGLE = 'PLAY_ORDER_SINGLE'\nexport const PLAY_ORDER_SHUFFLE = 'PLAY_ORDER_SHUFFLE'\nexport const PLAY_ORDER = [\n  PLAY_ORDER_LOOP,\n  PLAY_ORDER_SHUFFLE,\n  PLAY_ORDER_SINGLE\n]\n","import { PLAY_ORDER, PLAY_ORDER_SHUFFLE, PLAY_ORDER_SINGLE } from '../constants'\nimport { Song } from '../helpers'\n\nexport const SET_PLAYLIST = 'SET_PLAYLIST'\nexport const CLEAR_PLAYLIST = 'CLEAR_PLAYLIST'\n\nfunction shuffle (original) {\n  const shuffled = [...original]\n  shuffled.sort(() => (Math.random() - 0.5))\n  return shuffled\n}\n\nfunction swap (original) {\n  const swapped = [...original]\n  const a = swapped[0]\n  swapped[0] = swapped[swapped.length - 1]\n  swapped[swapped.length - 1] = a\n  return swapped\n}\n\nfunction createSetPlaylistAction (payload) {\n  return {\n    type: SET_PLAYLIST,\n    payload\n  }\n}\n\nfunction pushHistory (historyList, song) {\n  if (!song) return historyList\n  const newHistoryList = [...historyList]\n  const historyIndex = historyList.indexOf(song)\n  if (historyIndex !== -1) {\n    newHistoryList.splice(historyIndex, 1)\n  }\n  newHistoryList.unshift(song)\n  return newHistoryList\n}\n\nexport function setPlayOrder (playOrder) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = {\n      ...playlist,\n      playOrder\n    }\n    if (playOrder === PLAY_ORDER_SHUFFLE) {\n      const shuffledList = shuffle(playlist.orderedList)\n      const shuffledIndexOfPlaying = shuffledList.indexOf(playlist.playing)\n      newPlaylistState.shuffledList = shuffledList\n      newPlaylistState.shuffledIndexOfPlaying = shuffledIndexOfPlaying\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function nextPlayOrder () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const currentPlayOrder = playlist.playOrder\n    const currentPlayOrderIndex = PLAY_ORDER.indexOf(currentPlayOrder)\n    const nextPlayOrderIndex = currentPlayOrderIndex + 1 >= PLAY_ORDER.length ? 0 : currentPlayOrderIndex + 1\n    const nextPlayOrder = PLAY_ORDER[nextPlayOrderIndex]\n    setPlayOrder(nextPlayOrder)(dispatch, getState)\n  }\n}\n\nexport function next () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    if (playlist.orderedList.length) {\n      if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n        if (playlist.shuffledIndexOfPlaying + 1 === playlist.shuffledList.length) {\n          let newShuffledList = shuffle(playlist.orderedList)\n          if (newShuffledList[0] === playlist.shuffledList[playlist.shuffledList.length - 1]) {\n            newShuffledList = swap(newShuffledList)\n          }\n          newPlaylistState.shuffledList.push(...newShuffledList)\n        }\n        newPlaylistState.shuffledIndexOfPlaying++\n        newPlaylistState.playing = newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n        newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.indexOf(newPlaylistState.playing)\n      } else {\n        if (playlist.orderedIndexOfPlaying + 1 >= playlist.orderedList.length) {\n          newPlaylistState.orderedIndexOfPlaying = 0\n        } else {\n          newPlaylistState.orderedIndexOfPlaying++\n        }\n        newPlaylistState.playing = newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying]\n      }\n      newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function autoNext () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    if (playlist.playOrder === PLAY_ORDER_SINGLE) {\n      dispatch(createSetPlaylistAction(playlist))\n    } else {\n      next()(dispatch, getState)\n    }\n  }\n}\n\nexport function previous () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    if (playlist.orderedList.length) {\n      if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n        if (playlist.shuffledIndexOfPlaying - 1 === -1) {\n          let newShuffledList = shuffle(playlist.orderedList)\n          if (newShuffledList[newShuffledList.length - 1] === playlist.shuffledList[0]) {\n            newShuffledList = swap(newShuffledList)\n          }\n          newPlaylistState.shuffledList.unshift(...newShuffledList)\n          newPlaylistState.shuffledIndexOfPlaying += newShuffledList.length\n        }\n        newPlaylistState.shuffledIndexOfPlaying--\n        newPlaylistState.playing = newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n        newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.indexOf(newPlaylistState.playing)\n      } else {\n        if (playlist.orderedIndexOfPlaying - 1 === -1) {\n          newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.length - 1\n        } else {\n          newPlaylistState.orderedIndexOfPlaying--\n        }\n        newPlaylistState.playing = newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying]\n      }\n      newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function setCurrentSong (song) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    let songId\n    if (typeof song === 'number') {\n      songId = playlist.orderedList[song]\n    } else if (typeof song === 'string') {\n      songId = song\n    } else {\n      songId = Song.id(song)\n      newPlaylistState.songs[songId] = song\n      if (playlist.orderedList.indexOf(songId) === -1) {\n        newPlaylistState.orderedList.splice(\n          newPlaylistState.orderedIndexOfPlaying + 1, 0, songId\n        )\n      }\n    }\n    newPlaylistState.playing = songId\n    newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.indexOf(songId)\n    if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n      newPlaylistState.shuffledList = shuffle(newPlaylistState.orderedList)\n      newPlaylistState.shuffledIndexOfPlaying = newPlaylistState.shuffledList.indexOf(songId)\n    }\n    newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function setNextSong (song) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    let songId\n    if (typeof song === 'number') {\n      songId = playlist.orderedList[song]\n    } else if (typeof song === 'string') {\n      songId = song\n    } else {\n      songId = Song.id(song)\n      newPlaylistState.songs[songId] = song\n    }\n    if (songId !== playlist.playing) {\n      const orderedIndexReduction = playlist.orderedList.slice(0, playlist.orderedIndexOfPlaying)\n        .filter(item => item === songId).length\n      newPlaylistState.orderedList = playlist.orderedList.filter(item => item !== songId)\n      newPlaylistState.orderedIndexOfPlaying -= orderedIndexReduction\n      newPlaylistState.orderedList.splice(newPlaylistState.orderedIndexOfPlaying + 1, 0, songId)\n      if (playlist.playOrder === PLAY_ORDER_SHUFFLE &&\n        !(playlist.shuffledIndexOfPlaying + 1 < playlist.shuffledList.length &&\n          playlist.shuffledList[playlist.shuffledIndexOfPlaying + 1] === songId\n        )\n      ) {\n        newPlaylistState.shuffledList.splice(playlist.shuffledIndexOfPlaying + 1, 0, songId)\n      }\n      if (newPlaylistState.orderedList.length === 1) {\n        newPlaylistState.playing = newPlaylistState.orderedList[0]\n      }\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function removeSong (song) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    let songId\n    if (typeof song === 'number') {\n      songId = playlist.orderedList[song]\n    } else if (typeof song === 'string') {\n      songId = song\n    } else {\n      songId = Song.id(song)\n    }\n    const orderedIndexReduction = playlist.orderedList.slice(0, playlist.orderedIndexOfPlaying)\n      .filter(item => item === songId).length\n    newPlaylistState.orderedList = playlist.orderedList.filter(item => item !== songId)\n    if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n      const shuffledIndexReduction = playlist.shuffledList.slice(0, playlist.shuffledIndexOfPlaying)\n        .filter(item => item === songId).length\n      newPlaylistState.shuffledList = playlist.shuffledList.filter(item => item !== songId)\n      newPlaylistState.shuffledIndexOfPlaying -= shuffledIndexReduction\n      if (newPlaylistState.shuffledIndexOfPlaying >= newPlaylistState.shuffledList.length) {\n        newPlaylistState.shuffledIndexOfPlaying = newPlaylistState.shuffledList.length - 1 > 0\n          ? newPlaylistState.shuffledList.length - 1 : 0\n      }\n      newPlaylistState.orderedIndexOfPlaying = newPlaylistState.shuffledList.length - 1 > 0\n        ? newPlaylistState.orderedList.indexOf(\n          newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n        ) : 0\n    } else {\n      newPlaylistState.orderedIndexOfPlaying -= orderedIndexReduction\n      if (newPlaylistState.orderedIndexOfPlaying >= newPlaylistState.orderedList.length) {\n        newPlaylistState.orderedIndexOfPlaying = newPlaylistState.orderedList.length - 1 > 0\n          ? newPlaylistState.orderedList.length - 1 : 0\n      }\n    }\n    newPlaylistState.playing = newPlaylistState.orderedList.length\n      ? newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying] : null\n    newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function setPlaylist (songs, currentSong, playOrder) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = {\n      ...playlist,\n      songs: {},\n      orderedList: [],\n      orderedIndexOfPlaying: null,\n      shuffledList: [],\n      shuffledIndexOfPlaying: null,\n      playing: null,\n      playOrder: playOrder || playlist.playOrder\n    }\n    for (const song of songs) {\n      const songId = Song.id(song)\n      newPlaylistState.songs[songId] = song\n      newPlaylistState.orderedList.push(songId)\n    }\n    if (newPlaylistState.orderedList.length) {\n      let songId\n      let currentSongValid = false\n      if (typeof currentSong === 'number') {\n        songId = newPlaylistState.orderedList[currentSong]\n        currentSongValid = true\n      } else if (typeof currentSong === 'string') {\n        songId = currentSong\n        currentSongValid = true\n      } else if (currentSong) {\n        songId = Song.id(currentSong)\n        currentSongValid = true\n      }\n      if (currentSongValid) {\n        newPlaylistState.orderedIndexOfPlaying = newPlaylistState.orderedList.indexOf(songId)\n        if (newPlaylistState.playOrder === PLAY_ORDER_SHUFFLE) {\n          newPlaylistState.shuffledList = shuffle(newPlaylistState.orderedList)\n          newPlaylistState.shuffledIndexOfPlaying = newPlaylistState.shuffledList.indexOf(songId)\n        }\n        newPlaylistState.playing = songId\n      } else {\n        if (newPlaylistState.playOrder === PLAY_ORDER_SHUFFLE) {\n          newPlaylistState.shuffledList = shuffle(newPlaylistState.orderedList)\n          newPlaylistState.shuffledIndexOfPlaying = 0\n          newPlaylistState.playing = newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n          newPlaylistState.orderedIndexOfPlaying = newPlaylistState.orderedList.indexOf(newPlaylistState.playing)\n        } else {\n          newPlaylistState.orderedIndexOfPlaying = 0\n          newPlaylistState.playing = newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying]\n        }\n      }\n      newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function clearPlaylist () {\n  return {\n    type: CLEAR_PLAYLIST\n  }\n}\n","import { SET_SPEED, SET_VOLUME } from '../actions'\n\nconst initialState = {\n  volume: 1,\n  speed: 1\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_VOLUME:\n      return {\n        ...state,\n        volume: action.payload\n      }\n    case SET_SPEED:\n      return {\n        ...state,\n        speed: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import { cloneDeep, Song } from '../helpers'\nimport { CLEAR_PLAYLIST, SET_PLAYLIST, UPDATE_SONG } from '../actions'\nimport { PLAY_ORDER_LOOP } from '../constants'\n\nconst initialState = {\n  songs: {},\n  orderedList: [],\n  orderedIndexOfPlaying: null,\n  shuffledList: [],\n  shuffledIndexOfPlaying: null,\n  historyList: [],\n  playing: null,\n  playOrder: PLAY_ORDER_LOOP\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PLAYLIST:\n      return cloneDeep(action.payload)\n    case UPDATE_SONG: {\n      const newSong = cloneDeep(action.payload)\n      const newSongs = cloneDeep(state.songs)\n      newSongs[Song.id(newSong)] = newSong\n      return {\n        ...cloneDeep(state),\n        songs: newSongs\n      }\n    }\n    case CLEAR_PLAYLIST:\n      return {\n        ...cloneDeep(initialState),\n        playOrder: state.playOrder\n      }\n    default:\n      return state\n  }\n}\n","import { cloneDeep, Song } from '../helpers'\nimport {\n  CLEAR_PLAYLIST,\n  NEXT_SRC,\n  PAUSE,\n  PLAY,\n  SET_BUFFERED_TIME,\n  SET_CURRENT_TIME,\n  SET_PLAYLIST, SET_TIMES,\n  SET_TOTAL_TIME, UPDATE_SONG\n} from '../actions'\n\nconst initialState = {\n  src: '',\n  srcIndex: 0,\n  song: null,\n  currentTime: 0,\n  totalTime: 0,\n  bufferedTime: null,\n  paused: true\n}\n\nexport { initialState as initialPlayingState }\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CLEAR_PLAYLIST:\n      return cloneDeep(initialState)\n    case SET_PLAYLIST:\n      return {\n        ...state,\n        song: action.payload.playing\n          ? cloneDeep(action.payload.songs[action.payload.playing]) : null,\n        src: action.payload.playing\n          ? action.payload.songs[action.payload.playing].src instanceof Array\n            ? action.payload.songs[action.payload.playing].src[0]\n            : action.payload.songs[action.payload.playing].src\n          : '',\n        srcIndex: 0\n      }\n    case UPDATE_SONG:\n      return {\n        ...state,\n        song: state.song\n          ? Song.id(state.song) === Song.id(action.payload)\n            ? cloneDeep(action.payload) : cloneDeep(state.song)\n          : null\n      }\n    case NEXT_SRC: {\n      const srcId = state.srcIndex + 1\n      return {\n        ...cloneDeep(state),\n        srcIndex: srcId,\n        src: state.song.src[srcId]\n      }\n    }\n    case SET_CURRENT_TIME:\n      return {\n        ...cloneDeep(state),\n        currentTime: action.payload\n      }\n    case SET_TOTAL_TIME:\n      return {\n        ...cloneDeep(state),\n        totalTime: action.payload\n      }\n    case SET_BUFFERED_TIME:\n      return {\n        ...cloneDeep(state),\n        bufferedTime: cloneDeep(action.payload)\n      }\n    case SET_TIMES:\n      return {\n        ...cloneDeep(state),\n        currentTime: action.payload.currentTime,\n        totalTime: action.payload.totalTime,\n        bufferedTime: cloneDeep(action.payload.bufferedTime)\n      }\n    case PAUSE:\n      return {\n        ...cloneDeep(state),\n        paused: true\n      }\n    case PLAY:\n      return {\n        ...cloneDeep(state),\n        paused: false\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport { cloneDeep } from '../helpers'\nimport player from './player'\nimport playlist from './playlist'\nimport playing, { initialPlayingState } from './playing'\n\nexport default combineReducers({\n  player,\n  playing,\n  playlist\n})\n\nexport function saveState (state) {\n  const exportedState = cloneDeep(state)\n  delete exportedState.playing\n  return exportedState\n}\n\nexport function loadState (state) {\n  const importedState = cloneDeep(state)\n  importedState.playing = initialPlayingState\n  importedState.playing.song = importedState.playlist.playing\n    ? importedState.playlist.songs[importedState.playlist.playing] : null\n  importedState.playing.src = importedState.playing.song\n    ? importedState.playing.song.src instanceof Array\n      ? importedState.playing.song.src[0]\n      : importedState.playing.song.src\n    : null\n  return importedState\n}\n","import { applyMiddleware, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { version } from '../package'\nimport reducers, { loadState, saveState } from './reducers'\nimport {\n  autoNext, clearPlaylist, next, nextPlayOrder,\n  nextSrc,\n  pause,\n  play, previous, removeSong,\n  setBufferedTime, setCurrentSong, setCurrentTime, setNextSong,\n  setPlaylist, setPlayOrder,\n  setSpeed, setTimes,\n  setTotalTime,\n  setVolume, updateSong\n} from './actions'\nimport { Song, TimeRanges } from './helpers'\n\nexport class Kokoro {\n  get ref () {\n    return this._ref\n  }\n\n  get store () {\n    return this._store\n  }\n\n  get _dispatch () {\n    return this._store.dispatch\n  }\n\n  get getState () {\n    return this._store.getState\n  }\n\n  get destroyed () {\n    return this._destroyed || false\n  }\n\n  get version () {\n    return version\n  }\n\n  constructor (initializeState) {\n    this._store = initializeState\n      ? createStore(reducers, loadState(initializeState), composeWithDevTools(applyMiddleware(thunk)))\n      : createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))\n\n    this._ref = new window.Audio()\n\n    this._ref.addEventListener('canplay', () => {\n      this._dispatch(setBufferedTime(TimeRanges.toArray(this._ref.buffered)))\n    })\n    this._ref.addEventListener('canplaythrough', () => {\n      this._dispatch(setBufferedTime(TimeRanges.toArray(this._ref.buffered)))\n    })\n    this._ref.addEventListener('durationchange', () => {\n      this._dispatch(setTotalTime(this._ref.duration))\n    })\n    this._ref.addEventListener('ended', () => {\n      this._dispatch(autoNext())\n      this._onSrcProbablyChanged()\n      this._triggerPlay()\n    })\n    this._ref.addEventListener('error', () => {\n      const state = this.getState()\n      if (state.playing.song === null) return\n      if (state.playing.song.src instanceof Array &&\n        state.playing.srcIndex + 1 < state.playing.song.src.length) {\n        this._dispatch(nextSrc())\n      } else {\n        this._dispatch(autoNext())\n      }\n      this._onSrcProbablyChanged()\n      if (!state.playing.paused) this._triggerPlay()\n    })\n    this._ref.addEventListener('loadedmetadata', () => {\n      this._dispatch(setTotalTime(this._ref.duration))\n    })\n    this._ref.addEventListener('pause', () => {\n      this._dispatch(pause())\n    })\n    this._ref.addEventListener('play', () => {\n      this._dispatch(play())\n    })\n    this._ref.addEventListener('progress', () => {\n      this._dispatch(setBufferedTime(TimeRanges.toArray(this._ref.buffered)))\n    })\n    this._ref.addEventListener('ratechange', () => {\n      this._dispatch(setSpeed(this._ref.playbackRate))\n    })\n    this._ref.addEventListener('timeupdate', () => {\n      this._dispatch(setTimes({\n        currentTime: this._ref.currentTime,\n        totalTime: this._ref.duration,\n        bufferedTime: TimeRanges.toArray(this._ref.buffered)\n      }))\n    })\n    this._ref.addEventListener('volumechange', () => {\n      if (this._ref.muted) this._dispatch(setVolume(0))\n      else this._dispatch(setVolume(this._ref.volume))\n    })\n\n    this._listeners = []\n  }\n\n  destroy () {\n    this._destroyed = true\n    for (const item of this._listeners) {\n      item.unsub()\n    }\n    this._listeners = []\n    this.unmount()\n    this._ref.removeAttribute('src')\n    this._ref.load()\n  }\n\n  subscribe (listener) {\n    const o = this._listeners.find(item => item.listener === listener)\n    if (o) {\n      return o.unsub\n    }\n    const unsub = this._store.subscribe(() => listener(this.getState()))\n    this._listeners.push({\n      listener,\n      unsub\n    })\n    return unsub\n  }\n\n  unsubscribe (listener) {\n    const o = this._listeners.find(item => item.listener === listener)\n    if (o) {\n      o.unsub()\n      this._listeners = this._listeners.filter(item => item.listener !== listener)\n    }\n  }\n\n  dumpState () {\n    return saveState(this.getState())\n  }\n\n  mount (parentNode, id) {\n    if (typeof parentNode === 'string' || id) {\n      this._ref.id = typeof parentNode === 'string'\n        ? parentNode : id\n    }\n    const parent = parentNode instanceof window.HTMLElement\n      ? parentNode : document.body\n    parent.appendChild(this._ref)\n  }\n\n  unmount () {\n    this._ref.remove()\n  }\n\n  _onSrcProbablyChanged () {\n    const state = this.getState()\n    if (Song.id(state.playing) !== Song.id(this._ref)) {\n      if (state.playing.src) this._ref.src = state.playing.src\n      else {\n        this._ref.removeAttribute('src')\n        this._ref.load()\n      }\n    }\n  }\n\n  _triggerPlay () {\n    this._ref.currentTime = 0\n    this._ref.play()\n  }\n\n  pause () {\n    this._ref.pause()\n  }\n\n  play () {\n    this._ref.play()\n  }\n\n  togglePlay () {\n    const state = this.getState()\n    if (state.playing.paused) {\n      this._ref.play()\n    } else this._ref.pause()\n  }\n\n  setCurrentTime (time) {\n    this._ref.currentTime = time\n    this._dispatch(setCurrentTime(time))\n  }\n\n  next () {\n    this._dispatch(next())\n    this._onSrcProbablyChanged()\n    this._triggerPlay()\n  }\n\n  previous () {\n    this._dispatch(previous())\n    this._onSrcProbablyChanged()\n    this._triggerPlay()\n  }\n\n  setPlayOrder (playOrder) {\n    this._dispatch(setPlayOrder(playOrder))\n  }\n\n  nextPlayOrder () {\n    this._dispatch(nextPlayOrder())\n  }\n\n  setCurrentSong (song) {\n    this._dispatch(setCurrentSong(song))\n    this._onSrcProbablyChanged()\n    this._triggerPlay()\n  }\n\n  setNextSong (song) {\n    this._dispatch(setNextSong(song))\n    this._onSrcProbablyChanged()\n  }\n\n  removeSong (song) {\n    this._dispatch(removeSong(song))\n    this._onSrcProbablyChanged()\n  }\n\n  setPlaylist (songs, currentSong, playOrder) {\n    this._dispatch(setPlaylist(songs, currentSong, playOrder))\n    this._onSrcProbablyChanged()\n  }\n\n  clearPlaylist () {\n    this._dispatch(clearPlaylist())\n    this._onSrcProbablyChanged()\n  }\n\n  updateSong (song) {\n    this._dispatch(updateSong(song))\n  }\n\n  setVolume (volume) {\n    this._dispatch(setVolume(volume))\n    this._ref.volume = volume\n  }\n\n  setSpeed (speedRate) {\n    this._dispatch(setSpeed(speedRate))\n    this._ref.playbackRate = speedRate\n  }\n}\n\nexport default Kokoro\n\nexport * from './constants'\nexport * as actions from './actions'\nexport * as helpers from './helpers'\n"],"names":["Song","song","src","Array","encodeURI","good","decodeURI","TimeRanges","timeRanges","length","arr","i","push","start","end","cloneDeep","obj","JSON","parse","stringify","SET_VOLUME","SET_SPEED","setVolume","volume","type","payload","setSpeed","speedRate","PAUSE","PLAY","SET_CURRENT_TIME","SET_TOTAL_TIME","SET_BUFFERED_TIME","SET_TIMES","NEXT_SRC","UPDATE_SONG","pause","play","setCurrentTime","time","setTotalTime","setBufferedTime","buffered","setTimes","times","nextSrc","updateSong","PLAY_ORDER_LOOP","PLAY_ORDER_SINGLE","PLAY_ORDER_SHUFFLE","PLAY_ORDER","SET_PLAYLIST","CLEAR_PLAYLIST","shuffle","original","shuffled","sort","Math","random","swap","swapped","a","createSetPlaylistAction","pushHistory","historyList","newHistoryList","historyIndex","indexOf","splice","unshift","setPlayOrder","playOrder","dispatch","getState","playlist","newPlaylistState","shuffledList","orderedList","shuffledIndexOfPlaying","playing","nextPlayOrder","currentPlayOrder","currentPlayOrderIndex","nextPlayOrderIndex","next","newShuffledList","orderedIndexOfPlaying","autoNext","previous","setCurrentSong","songId","id","songs","setNextSong","orderedIndexReduction","slice","filter","item","removeSong","shuffledIndexReduction","setPlaylist","currentSong","currentSongValid","clearPlaylist","initialState","speed","state","action","newSong","newSongs","srcIndex","currentTime","totalTime","bufferedTime","paused","srcId","combineReducers","player","saveState","exportedState","loadState","importedState","initialPlayingState","Kokoro","initializeState","_store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","_ref","window","Audio","addEventListener","_dispatch","toArray","duration","_onSrcProbablyChanged","_triggerPlay","playbackRate","muted","_listeners","_destroyed","version","unsub","unmount","removeAttribute","load","listener","o","find","subscribe","parentNode","parent","HTMLElement","document","body","appendChild","remove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,YAAWC,IAAX,EAAiB;AACf,UAAIC,GAAG,GAAGD,IAAI,CAACC,GAAL,YAAoBC,KAApB,GACNC,SAAS,CAACH,IAAI,CAACC,GAAL,CAAS,CAAT,CAAD,CADH,GAENE,SAAS,CAACH,IAAI,CAACC,GAAN,CAFb;AAIA,UAAIG,IAAI,GAAGC,SAAS,CAACJ,GAAD,CAApB;;AACA,aAAOG,IAAI,KAAKH,GAAhB,EAAqB;AACnBA,QAAAA,GAAG,GAAGG,IAAN;AACAA,QAAAA,IAAI,GAAGC,SAAS,CAACJ,GAAD,CAAhB;AACD;;AACD,aAAOE,SAAS,CAACC,IAAD,CAAhB;AACD;AAZH;;AAAA;AAAA;AAeA,IAAaE,UAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,iBAAgBC,UAAhB,EAA4B;AAC1B,UAAMC,MAAM,GAAGD,UAAU,CAACC,MAA1B;AACA,UAAMC,GAAG,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC/BD,QAAAA,GAAG,CAACE,IAAJ,CAAS,CACPJ,UAAU,CAACK,KAAX,CAAiBF,CAAjB,CADO,EAEPH,UAAU,CAACM,GAAX,CAAeH,CAAf,CAFO,CAAT;AAID;;AACD,aAAOD,GAAP;AACD;AAXH;;AAAA;AAAA;AAcA,AAAO,SAASK,SAAT,CAAoBC,GAApB,EAAyB;AAC9B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,GAAf,CAAX,CAAP;AACD;;;;;;;;;AC/BM,IAAMI,UAAU,GAAG,YAAnB;AACP,AAAO,IAAMC,SAAS,GAAG,WAAlB;AAEP,AAAO,SAASC,SAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,UADD;AAELK,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID;AAED,AAAO,SAASG,QAAT,CAAmBC,SAAnB,EAA8B;AACnC,SAAO;AACLH,IAAAA,IAAI,EAAEH,SADD;AAELI,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;;ACfM,IAAMC,KAAK,GAAG,OAAd;AACP,AAAO,IAAMC,IAAI,GAAG,MAAb;AACP,AAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,AAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,AAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,AAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,AAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,AAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,AAAO,SAASC,KAAT,GAAkB;AACvB,SAAO;AACLZ,IAAAA,IAAI,EAAEI;AADD,GAAP;AAGD;AAED,AAAO,SAASS,IAAT,GAAiB;AACtB,SAAO;AACLb,IAAAA,IAAI,EAAEK;AADD,GAAP;AAGD;AAED,AAAO,SAASS,cAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAO;AACLf,IAAAA,IAAI,EAAEM,gBADD;AAELL,IAAAA,OAAO,EAAEc;AAFJ,GAAP;AAID;AAED,AAAO,SAASC,YAAT,CAAuBD,IAAvB,EAA6B;AAClC,SAAO;AACLf,IAAAA,IAAI,EAAEO,cADD;AAELN,IAAAA,OAAO,EAAEc;AAFJ,GAAP;AAID;AAED,AAAO,SAASE,eAAT,CAA0BC,QAA1B,EAAoC;AACzC,SAAO;AACLlB,IAAAA,IAAI,EAAEQ,iBADD;AAELP,IAAAA,OAAO,EAAEiB;AAFJ,GAAP;AAID;AAED,AAAO,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAC/B,SAAO;AACLpB,IAAAA,IAAI,EAAES,SADD;AAELR,IAAAA,OAAO,EAAEmB;AAFJ,GAAP;AAID;AAED,AAAO,SAASC,OAAT,GAAoB;AACzB,SAAO;AACLrB,IAAAA,IAAI,EAAEU;AADD,GAAP;AAGD;AAED,AAAO,SAASY,UAAT,CAAqB7C,IAArB,EAA2B;AAChC,SAAO;AACLuB,IAAAA,IAAI,EAAEW,WADD;AAELV,IAAAA,OAAO,EAAExB;AAFJ,GAAP;AAID;;IC5DY8C,eAAe,GAAG,iBAAxB;AACP,IAAaC,iBAAiB,GAAG,mBAA1B;AACP,IAAaC,kBAAkB,GAAG,oBAA3B;AACP,IAAaC,UAAU,GAAG,CACxBH,eADwB,EAExBE,kBAFwB,EAGxBD,iBAHwB,CAAnB;;ACAA,IAAMG,YAAY,GAAG,cAArB;AACP,AAAO,IAAMC,cAAc,GAAG,gBAAvB;;AAEP,SAASC,OAAT,CAAkBC,QAAlB,EAA4B;AAC1B,MAAMC,QAAQ,sBAAOD,QAAP,CAAd;;AACAC,EAAAA,QAAQ,CAACC,IAAT,CAAc;AAAA,WAAOC,IAAI,CAACC,MAAL,KAAgB,GAAvB;AAAA,GAAd;AACA,SAAOH,QAAP;AACD;;AAED,SAASI,IAAT,CAAeL,QAAf,EAAyB;AACvB,MAAMM,OAAO,sBAAON,QAAP,CAAb;;AACA,MAAMO,CAAC,GAAGD,OAAO,CAAC,CAAD,CAAjB;AACAA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAACA,OAAO,CAACnD,MAAR,GAAiB,CAAlB,CAApB;AACAmD,EAAAA,OAAO,CAACA,OAAO,CAACnD,MAAR,GAAiB,CAAlB,CAAP,GAA8BoD,CAA9B;AACA,SAAOD,OAAP;AACD;;AAED,SAASE,uBAAT,CAAkCrC,OAAlC,EAA2C;AACzC,SAAO;AACLD,IAAAA,IAAI,EAAE2B,YADD;AAEL1B,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;;AAED,SAASsC,WAAT,CAAsBC,WAAtB,EAAmC/D,IAAnC,EAAyC;AACvC,MAAI,CAACA,IAAL,EAAW,OAAO+D,WAAP;;AACX,MAAMC,cAAc,sBAAOD,WAAP,CAApB;;AACA,MAAME,YAAY,GAAGF,WAAW,CAACG,OAAZ,CAAoBlE,IAApB,CAArB;;AACA,MAAIiE,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBD,IAAAA,cAAc,CAACG,MAAf,CAAsBF,YAAtB,EAAoC,CAApC;AACD;;AACDD,EAAAA,cAAc,CAACI,OAAf,CAAuBpE,IAAvB;AACA,SAAOgE,cAAP;AACD;;AAED,AAAO,SAASK,YAAT,CAAuBC,SAAvB,EAAkC;AACvC,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBACRA,QAAQ,EADA;AAAA,QACrBC,QADqB,aACrBA,QADqB;;AAE7B,QAAMC,gBAAgB,qCACjBD,QADiB;AAEpBH,MAAAA,SAAS,EAATA;AAFoB,MAAtB;;AAIA,QAAIA,SAAS,KAAKtB,kBAAlB,EAAsC;AACpC,UAAM2B,YAAY,GAAGvB,OAAO,CAACqB,QAAQ,CAACG,WAAV,CAA5B;AACA,UAAMC,sBAAsB,GAAGF,YAAY,CAACT,OAAb,CAAqBO,QAAQ,CAACK,OAA9B,CAA/B;AACAJ,MAAAA,gBAAgB,CAACC,YAAjB,GAAgCA,YAAhC;AACAD,MAAAA,gBAAgB,CAACG,sBAAjB,GAA0CA,sBAA1C;AACD;;AACDN,IAAAA,QAAQ,CAACV,uBAAuB,CAACa,gBAAD,CAAxB,CAAR;AACD,GAbD;AAcD;AAED,AAAO,SAASK,aAAT,GAA0B;AAC/B,SAAO,UAACR,QAAD,EAAWC,QAAX,EAAwB;AAAA,qBACRA,QAAQ,EADA;AAAA,QACrBC,QADqB,cACrBA,QADqB;;AAE7B,QAAMO,gBAAgB,GAAGP,QAAQ,CAACH,SAAlC;AACA,QAAMW,qBAAqB,GAAGhC,UAAU,CAACiB,OAAX,CAAmBc,gBAAnB,CAA9B;AACA,QAAME,kBAAkB,GAAGD,qBAAqB,GAAG,CAAxB,IAA6BhC,UAAU,CAACzC,MAAxC,GAAiD,CAAjD,GAAqDyE,qBAAqB,GAAG,CAAxG;AACA,QAAMF,aAAa,GAAG9B,UAAU,CAACiC,kBAAD,CAAhC;AACAb,IAAAA,YAAY,CAACU,aAAD,CAAZ,CAA4BR,QAA5B,EAAsCC,QAAtC;AACD,GAPD;AAQD;AAED,AAAO,SAASW,IAAT,GAAiB;AACtB,SAAO,UAACZ,QAAD,EAAWC,QAAX,EAAwB;AAAA,qBACRA,QAAQ,EADA;AAAA,QACrBC,QADqB,cACrBA,QADqB;;AAE7B,QAAMC,gBAAgB,sBAAQD,QAAR,CAAtB;;AACA,QAAIA,QAAQ,CAACG,WAAT,CAAqBpE,MAAzB,EAAiC;AAC/B,UAAIiE,QAAQ,CAACH,SAAT,KAAuBtB,kBAA3B,EAA+C;AAC7C,YAAIyB,QAAQ,CAACI,sBAAT,GAAkC,CAAlC,KAAwCJ,QAAQ,CAACE,YAAT,CAAsBnE,MAAlE,EAA0E;AAAA;;AACxE,cAAI4E,eAAe,GAAGhC,OAAO,CAACqB,QAAQ,CAACG,WAAV,CAA7B;;AACA,cAAIQ,eAAe,CAAC,CAAD,CAAf,KAAuBX,QAAQ,CAACE,YAAT,CAAsBF,QAAQ,CAACE,YAAT,CAAsBnE,MAAtB,GAA+B,CAArD,CAA3B,EAAoF;AAClF4E,YAAAA,eAAe,GAAG1B,IAAI,CAAC0B,eAAD,CAAtB;AACD;;AACD,mCAAAV,gBAAgB,CAACC,YAAjB,EAA8BhE,IAA9B,iDAAsCyE,eAAtC;AACD;;AACDV,QAAAA,gBAAgB,CAACG,sBAAjB;AACAH,QAAAA,gBAAgB,CAACI,OAAjB,GAA2BJ,gBAAgB,CAACC,YAAjB,CAA8BD,gBAAgB,CAACG,sBAA/C,CAA3B;AACAH,QAAAA,gBAAgB,CAACW,qBAAjB,GAAyCZ,QAAQ,CAACG,WAAT,CAAqBV,OAArB,CAA6BQ,gBAAgB,CAACI,OAA9C,CAAzC;AACD,OAXD,MAWO;AACL,YAAIL,QAAQ,CAACY,qBAAT,GAAiC,CAAjC,IAAsCZ,QAAQ,CAACG,WAAT,CAAqBpE,MAA/D,EAAuE;AACrEkE,UAAAA,gBAAgB,CAACW,qBAAjB,GAAyC,CAAzC;AACD,SAFD,MAEO;AACLX,UAAAA,gBAAgB,CAACW,qBAAjB;AACD;;AACDX,QAAAA,gBAAgB,CAACI,OAAjB,GAA2BJ,gBAAgB,CAACE,WAAjB,CAA6BF,gBAAgB,CAACW,qBAA9C,CAA3B;AACD;;AACDX,MAAAA,gBAAgB,CAACX,WAAjB,GAA+BD,WAAW,CAACW,QAAQ,CAACV,WAAV,EAAuBW,gBAAgB,CAACI,OAAxC,CAA1C;AACD;;AACDP,IAAAA,QAAQ,CAACV,uBAAuB,CAACa,gBAAD,CAAxB,CAAR;AACD,GA1BD;AA2BD;AAED,AAAO,SAASY,QAAT,GAAqB;AAC1B,SAAO,UAACf,QAAD,EAAWC,QAAX,EAAwB;AAAA,qBACRA,QAAQ,EADA;AAAA,QACrBC,QADqB,cACrBA,QADqB;;AAE7B,QAAIA,QAAQ,CAACH,SAAT,KAAuBvB,iBAA3B,EAA8C;AAC5CwB,MAAAA,QAAQ,CAACV,uBAAuB,CAACY,QAAD,CAAxB,CAAR;AACD,KAFD,MAEO;AACLU,MAAAA,IAAI,GAAGZ,QAAH,EAAaC,QAAb,CAAJ;AACD;AACF,GAPD;AAQD;AAED,AAAO,SAASe,QAAT,GAAqB;AAC1B,SAAO,UAAChB,QAAD,EAAWC,QAAX,EAAwB;AAAA,qBACRA,QAAQ,EADA;AAAA,QACrBC,QADqB,cACrBA,QADqB;;AAE7B,QAAMC,gBAAgB,sBAAQD,QAAR,CAAtB;;AACA,QAAIA,QAAQ,CAACG,WAAT,CAAqBpE,MAAzB,EAAiC;AAC/B,UAAIiE,QAAQ,CAACH,SAAT,KAAuBtB,kBAA3B,EAA+C;AAC7C,YAAIyB,QAAQ,CAACI,sBAAT,GAAkC,CAAlC,KAAwC,CAAC,CAA7C,EAAgD;AAAA;;AAC9C,cAAIO,eAAe,GAAGhC,OAAO,CAACqB,QAAQ,CAACG,WAAV,CAA7B;;AACA,cAAIQ,eAAe,CAACA,eAAe,CAAC5E,MAAhB,GAAyB,CAA1B,CAAf,KAAgDiE,QAAQ,CAACE,YAAT,CAAsB,CAAtB,CAApD,EAA8E;AAC5ES,YAAAA,eAAe,GAAG1B,IAAI,CAAC0B,eAAD,CAAtB;AACD;;AACD,oCAAAV,gBAAgB,CAACC,YAAjB,EAA8BP,OAA9B,kDAAyCgB,eAAzC;;AACAV,UAAAA,gBAAgB,CAACG,sBAAjB,IAA2CO,eAAe,CAAC5E,MAA3D;AACD;;AACDkE,QAAAA,gBAAgB,CAACG,sBAAjB;AACAH,QAAAA,gBAAgB,CAACI,OAAjB,GAA2BJ,gBAAgB,CAACC,YAAjB,CAA8BD,gBAAgB,CAACG,sBAA/C,CAA3B;AACAH,QAAAA,gBAAgB,CAACW,qBAAjB,GAAyCZ,QAAQ,CAACG,WAAT,CAAqBV,OAArB,CAA6BQ,gBAAgB,CAACI,OAA9C,CAAzC;AACD,OAZD,MAYO;AACL,YAAIL,QAAQ,CAACY,qBAAT,GAAiC,CAAjC,KAAuC,CAAC,CAA5C,EAA+C;AAC7CX,UAAAA,gBAAgB,CAACW,qBAAjB,GAAyCZ,QAAQ,CAACG,WAAT,CAAqBpE,MAArB,GAA8B,CAAvE;AACD,SAFD,MAEO;AACLkE,UAAAA,gBAAgB,CAACW,qBAAjB;AACD;;AACDX,QAAAA,gBAAgB,CAACI,OAAjB,GAA2BJ,gBAAgB,CAACE,WAAjB,CAA6BF,gBAAgB,CAACW,qBAA9C,CAA3B;AACD;;AACDX,MAAAA,gBAAgB,CAACX,WAAjB,GAA+BD,WAAW,CAACW,QAAQ,CAACV,WAAV,EAAuBW,gBAAgB,CAACI,OAAxC,CAA1C;AACD;;AACDP,IAAAA,QAAQ,CAACV,uBAAuB,CAACa,gBAAD,CAAxB,CAAR;AACD,GA3BD;AA4BD;AAED,AAAO,SAASc,cAAT,CAAyBxF,IAAzB,EAA+B;AACpC,SAAO,UAACuE,QAAD,EAAWC,QAAX,EAAwB;AAAA,qBACRA,QAAQ,EADA;AAAA,QACrBC,QADqB,cACrBA,QADqB;;AAE7B,QAAMC,gBAAgB,sBAAQD,QAAR,CAAtB;;AACA,QAAIgB,MAAJ;;AACA,QAAI,OAAOzF,IAAP,KAAgB,QAApB,EAA8B;AAC5ByF,MAAAA,MAAM,GAAGhB,QAAQ,CAACG,WAAT,CAAqB5E,IAArB,CAAT;AACD,KAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AACnCyF,MAAAA,MAAM,GAAGzF,IAAT;AACD,KAFM,MAEA;AACLyF,MAAAA,MAAM,GAAG1F,IAAI,CAAC2F,EAAL,CAAQ1F,IAAR,CAAT;AACA0E,MAAAA,gBAAgB,CAACiB,KAAjB,CAAuBF,MAAvB,IAAiCzF,IAAjC;;AACA,UAAIyE,QAAQ,CAACG,WAAT,CAAqBV,OAArB,CAA6BuB,MAA7B,MAAyC,CAAC,CAA9C,EAAiD;AAC/Cf,QAAAA,gBAAgB,CAACE,WAAjB,CAA6BT,MAA7B,CACEO,gBAAgB,CAACW,qBAAjB,GAAyC,CAD3C,EAC8C,CAD9C,EACiDI,MADjD;AAGD;AACF;;AACDf,IAAAA,gBAAgB,CAACI,OAAjB,GAA2BW,MAA3B;AACAf,IAAAA,gBAAgB,CAACW,qBAAjB,GAAyCZ,QAAQ,CAACG,WAAT,CAAqBV,OAArB,CAA6BuB,MAA7B,CAAzC;;AACA,QAAIhB,QAAQ,CAACH,SAAT,KAAuBtB,kBAA3B,EAA+C;AAC7C0B,MAAAA,gBAAgB,CAACC,YAAjB,GAAgCvB,OAAO,CAACsB,gBAAgB,CAACE,WAAlB,CAAvC;AACAF,MAAAA,gBAAgB,CAACG,sBAAjB,GAA0CH,gBAAgB,CAACC,YAAjB,CAA8BT,OAA9B,CAAsCuB,MAAtC,CAA1C;AACD;;AACDf,IAAAA,gBAAgB,CAACX,WAAjB,GAA+BD,WAAW,CAACW,QAAQ,CAACV,WAAV,EAAuBW,gBAAgB,CAACI,OAAxC,CAA1C;AACAP,IAAAA,QAAQ,CAACV,uBAAuB,CAACa,gBAAD,CAAxB,CAAR;AACD,GAzBD;AA0BD;AAED,AAAO,SAASkB,WAAT,CAAsB5F,IAAtB,EAA4B;AACjC,SAAO,UAACuE,QAAD,EAAWC,QAAX,EAAwB;AAAA,qBACRA,QAAQ,EADA;AAAA,QACrBC,QADqB,cACrBA,QADqB;;AAE7B,QAAMC,gBAAgB,sBAAQD,QAAR,CAAtB;;AACA,QAAIgB,MAAJ;;AACA,QAAI,OAAOzF,IAAP,KAAgB,QAApB,EAA8B;AAC5ByF,MAAAA,MAAM,GAAGhB,QAAQ,CAACG,WAAT,CAAqB5E,IAArB,CAAT;AACD,KAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AACnCyF,MAAAA,MAAM,GAAGzF,IAAT;AACD,KAFM,MAEA;AACLyF,MAAAA,MAAM,GAAG1F,IAAI,CAAC2F,EAAL,CAAQ1F,IAAR,CAAT;AACA0E,MAAAA,gBAAgB,CAACiB,KAAjB,CAAuBF,MAAvB,IAAiCzF,IAAjC;AACD;;AACD,QAAIyF,MAAM,KAAKhB,QAAQ,CAACK,OAAxB,EAAiC;AAC/B,UAAMe,qBAAqB,GAAGpB,QAAQ,CAACG,WAAT,CAAqBkB,KAArB,CAA2B,CAA3B,EAA8BrB,QAAQ,CAACY,qBAAvC,EAC3BU,MAD2B,CACpB,UAAAC,IAAI;AAAA,eAAIA,IAAI,KAAKP,MAAb;AAAA,OADgB,EACKjF,MADnC;AAEAkE,MAAAA,gBAAgB,CAACE,WAAjB,GAA+BH,QAAQ,CAACG,WAAT,CAAqBmB,MAArB,CAA4B,UAAAC,IAAI;AAAA,eAAIA,IAAI,KAAKP,MAAb;AAAA,OAAhC,CAA/B;AACAf,MAAAA,gBAAgB,CAACW,qBAAjB,IAA0CQ,qBAA1C;AACAnB,MAAAA,gBAAgB,CAACE,WAAjB,CAA6BT,MAA7B,CAAoCO,gBAAgB,CAACW,qBAAjB,GAAyC,CAA7E,EAAgF,CAAhF,EAAmFI,MAAnF;;AACA,UAAIhB,QAAQ,CAACH,SAAT,KAAuBtB,kBAAvB,IACF,EAAEyB,QAAQ,CAACI,sBAAT,GAAkC,CAAlC,GAAsCJ,QAAQ,CAACE,YAAT,CAAsBnE,MAA5D,IACAiE,QAAQ,CAACE,YAAT,CAAsBF,QAAQ,CAACI,sBAAT,GAAkC,CAAxD,MAA+DY,MADjE,CADF,EAIE;AACAf,QAAAA,gBAAgB,CAACC,YAAjB,CAA8BR,MAA9B,CAAqCM,QAAQ,CAACI,sBAAT,GAAkC,CAAvE,EAA0E,CAA1E,EAA6EY,MAA7E;AACD;;AACD,UAAIf,gBAAgB,CAACE,WAAjB,CAA6BpE,MAA7B,KAAwC,CAA5C,EAA+C;AAC7CkE,QAAAA,gBAAgB,CAACI,OAAjB,GAA2BJ,gBAAgB,CAACE,WAAjB,CAA6B,CAA7B,CAA3B;AACD;AACF;;AACDL,IAAAA,QAAQ,CAACV,uBAAuB,CAACa,gBAAD,CAAxB,CAAR;AACD,GA9BD;AA+BD;AAED,AAAO,SAASuB,UAAT,CAAqBjG,IAArB,EAA2B;AAChC,SAAO,UAACuE,QAAD,EAAWC,QAAX,EAAwB;AAAA,qBACRA,QAAQ,EADA;AAAA,QACrBC,QADqB,cACrBA,QADqB;;AAE7B,QAAMC,gBAAgB,sBAAQD,QAAR,CAAtB;;AACA,QAAIgB,MAAJ;;AACA,QAAI,OAAOzF,IAAP,KAAgB,QAApB,EAA8B;AAC5ByF,MAAAA,MAAM,GAAGhB,QAAQ,CAACG,WAAT,CAAqB5E,IAArB,CAAT;AACD,KAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AACnCyF,MAAAA,MAAM,GAAGzF,IAAT;AACD,KAFM,MAEA;AACLyF,MAAAA,MAAM,GAAG1F,IAAI,CAAC2F,EAAL,CAAQ1F,IAAR,CAAT;AACD;;AACD,QAAM6F,qBAAqB,GAAGpB,QAAQ,CAACG,WAAT,CAAqBkB,KAArB,CAA2B,CAA3B,EAA8BrB,QAAQ,CAACY,qBAAvC,EAC3BU,MAD2B,CACpB,UAAAC,IAAI;AAAA,aAAIA,IAAI,KAAKP,MAAb;AAAA,KADgB,EACKjF,MADnC;AAEAkE,IAAAA,gBAAgB,CAACE,WAAjB,GAA+BH,QAAQ,CAACG,WAAT,CAAqBmB,MAArB,CAA4B,UAAAC,IAAI;AAAA,aAAIA,IAAI,KAAKP,MAAb;AAAA,KAAhC,CAA/B;;AACA,QAAIhB,QAAQ,CAACH,SAAT,KAAuBtB,kBAA3B,EAA+C;AAC7C,UAAMkD,sBAAsB,GAAGzB,QAAQ,CAACE,YAAT,CAAsBmB,KAAtB,CAA4B,CAA5B,EAA+BrB,QAAQ,CAACI,sBAAxC,EAC5BkB,MAD4B,CACrB,UAAAC,IAAI;AAAA,eAAIA,IAAI,KAAKP,MAAb;AAAA,OADiB,EACIjF,MADnC;AAEAkE,MAAAA,gBAAgB,CAACC,YAAjB,GAAgCF,QAAQ,CAACE,YAAT,CAAsBoB,MAAtB,CAA6B,UAAAC,IAAI;AAAA,eAAIA,IAAI,KAAKP,MAAb;AAAA,OAAjC,CAAhC;AACAf,MAAAA,gBAAgB,CAACG,sBAAjB,IAA2CqB,sBAA3C;;AACA,UAAIxB,gBAAgB,CAACG,sBAAjB,IAA2CH,gBAAgB,CAACC,YAAjB,CAA8BnE,MAA7E,EAAqF;AACnFkE,QAAAA,gBAAgB,CAACG,sBAAjB,GAA0CH,gBAAgB,CAACC,YAAjB,CAA8BnE,MAA9B,GAAuC,CAAvC,GAA2C,CAA3C,GACtCkE,gBAAgB,CAACC,YAAjB,CAA8BnE,MAA9B,GAAuC,CADD,GACK,CAD/C;AAED;;AACDkE,MAAAA,gBAAgB,CAACW,qBAAjB,GAAyCX,gBAAgB,CAACC,YAAjB,CAA8BnE,MAA9B,GAAuC,CAAvC,GAA2C,CAA3C,GACrCkE,gBAAgB,CAACE,WAAjB,CAA6BV,OAA7B,CACAQ,gBAAgB,CAACC,YAAjB,CAA8BD,gBAAgB,CAACG,sBAA/C,CADA,CADqC,GAGnC,CAHN;AAID,KAbD,MAaO;AACLH,MAAAA,gBAAgB,CAACW,qBAAjB,IAA0CQ,qBAA1C;;AACA,UAAInB,gBAAgB,CAACW,qBAAjB,IAA0CX,gBAAgB,CAACE,WAAjB,CAA6BpE,MAA3E,EAAmF;AACjFkE,QAAAA,gBAAgB,CAACW,qBAAjB,GAAyCX,gBAAgB,CAACE,WAAjB,CAA6BpE,MAA7B,GAAsC,CAAtC,GAA0C,CAA1C,GACrCkE,gBAAgB,CAACE,WAAjB,CAA6BpE,MAA7B,GAAsC,CADD,GACK,CAD9C;AAED;AACF;;AACDkE,IAAAA,gBAAgB,CAACI,OAAjB,GAA2BJ,gBAAgB,CAACE,WAAjB,CAA6BpE,MAA7B,GACvBkE,gBAAgB,CAACE,WAAjB,CAA6BF,gBAAgB,CAACW,qBAA9C,CADuB,GACgD,IAD3E;AAEAX,IAAAA,gBAAgB,CAACX,WAAjB,GAA+BD,WAAW,CAACW,QAAQ,CAACV,WAAV,EAAuBW,gBAAgB,CAACI,OAAxC,CAA1C;AACAP,IAAAA,QAAQ,CAACV,uBAAuB,CAACa,gBAAD,CAAxB,CAAR;AACD,GAtCD;AAuCD;AAED,AAAO,SAASyB,WAAT,CAAsBR,KAAtB,EAA6BS,WAA7B,EAA0C9B,SAA1C,EAAqD;AAC1D,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,qBACRA,QAAQ,EADA;AAAA,QACrBC,QADqB,cACrBA,QADqB;;AAE7B,QAAMC,gBAAgB,qCACjBD,QADiB;AAEpBkB,MAAAA,KAAK,EAAE,EAFa;AAGpBf,MAAAA,WAAW,EAAE,EAHO;AAIpBS,MAAAA,qBAAqB,EAAE,IAJH;AAKpBV,MAAAA,YAAY,EAAE,EALM;AAMpBE,MAAAA,sBAAsB,EAAE,IANJ;AAOpBC,MAAAA,OAAO,EAAE,IAPW;AAQpBR,MAAAA,SAAS,EAAEA,SAAS,IAAIG,QAAQ,CAACH;AARb,MAAtB;;AAF6B,+CAYVqB,KAZU;AAAA;;AAAA;AAY7B,0DAA0B;AAAA,YAAf3F,IAAe;;AACxB,YAAMyF,OAAM,GAAG1F,IAAI,CAAC2F,EAAL,CAAQ1F,IAAR,CAAf;;AACA0E,QAAAA,gBAAgB,CAACiB,KAAjB,CAAuBF,OAAvB,IAAiCzF,IAAjC;AACA0E,QAAAA,gBAAgB,CAACE,WAAjB,CAA6BjE,IAA7B,CAAkC8E,OAAlC;AACD;AAhB4B;AAAA;AAAA;AAAA;AAAA;;AAiB7B,QAAIf,gBAAgB,CAACE,WAAjB,CAA6BpE,MAAjC,EAAyC;AACvC,UAAIiF,MAAJ;AACA,UAAIY,gBAAgB,GAAG,KAAvB;;AACA,UAAI,OAAOD,WAAP,KAAuB,QAA3B,EAAqC;AACnCX,QAAAA,MAAM,GAAGf,gBAAgB,CAACE,WAAjB,CAA6BwB,WAA7B,CAAT;AACAC,QAAAA,gBAAgB,GAAG,IAAnB;AACD,OAHD,MAGO,IAAI,OAAOD,WAAP,KAAuB,QAA3B,EAAqC;AAC1CX,QAAAA,MAAM,GAAGW,WAAT;AACAC,QAAAA,gBAAgB,GAAG,IAAnB;AACD,OAHM,MAGA,IAAID,WAAJ,EAAiB;AACtBX,QAAAA,MAAM,GAAG1F,IAAI,CAAC2F,EAAL,CAAQU,WAAR,CAAT;AACAC,QAAAA,gBAAgB,GAAG,IAAnB;AACD;;AACD,UAAIA,gBAAJ,EAAsB;AACpB3B,QAAAA,gBAAgB,CAACW,qBAAjB,GAAyCX,gBAAgB,CAACE,WAAjB,CAA6BV,OAA7B,CAAqCuB,MAArC,CAAzC;;AACA,YAAIf,gBAAgB,CAACJ,SAAjB,KAA+BtB,kBAAnC,EAAuD;AACrD0B,UAAAA,gBAAgB,CAACC,YAAjB,GAAgCvB,OAAO,CAACsB,gBAAgB,CAACE,WAAlB,CAAvC;AACAF,UAAAA,gBAAgB,CAACG,sBAAjB,GAA0CH,gBAAgB,CAACC,YAAjB,CAA8BT,OAA9B,CAAsCuB,MAAtC,CAA1C;AACD;;AACDf,QAAAA,gBAAgB,CAACI,OAAjB,GAA2BW,MAA3B;AACD,OAPD,MAOO;AACL,YAAIf,gBAAgB,CAACJ,SAAjB,KAA+BtB,kBAAnC,EAAuD;AACrD0B,UAAAA,gBAAgB,CAACC,YAAjB,GAAgCvB,OAAO,CAACsB,gBAAgB,CAACE,WAAlB,CAAvC;AACAF,UAAAA,gBAAgB,CAACG,sBAAjB,GAA0C,CAA1C;AACAH,UAAAA,gBAAgB,CAACI,OAAjB,GAA2BJ,gBAAgB,CAACC,YAAjB,CAA8BD,gBAAgB,CAACG,sBAA/C,CAA3B;AACAH,UAAAA,gBAAgB,CAACW,qBAAjB,GAAyCX,gBAAgB,CAACE,WAAjB,CAA6BV,OAA7B,CAAqCQ,gBAAgB,CAACI,OAAtD,CAAzC;AACD,SALD,MAKO;AACLJ,UAAAA,gBAAgB,CAACW,qBAAjB,GAAyC,CAAzC;AACAX,UAAAA,gBAAgB,CAACI,OAAjB,GAA2BJ,gBAAgB,CAACE,WAAjB,CAA6BF,gBAAgB,CAACW,qBAA9C,CAA3B;AACD;AACF;;AACDX,MAAAA,gBAAgB,CAACX,WAAjB,GAA+BD,WAAW,CAACW,QAAQ,CAACV,WAAV,EAAuBW,gBAAgB,CAACI,OAAxC,CAA1C;AACD;;AACDP,IAAAA,QAAQ,CAACV,uBAAuB,CAACa,gBAAD,CAAxB,CAAR;AACD,GAnDD;AAoDD;AAED,AAAO,SAAS4B,aAAT,GAA0B;AAC/B,SAAO;AACL/E,IAAAA,IAAI,EAAE4B;AADD,GAAP;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5SD,IAAMoD,YAAY,GAAG;AACnBjF,EAAAA,MAAM,EAAE,CADW;AAEnBkF,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,AAAe,mBAAwC;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AACrD,UAAQA,MAAM,CAACnF,IAAf;AACE,SAAKJ,UAAL;AACE,+CACKsF,KADL;AAEEnF,QAAAA,MAAM,EAAEoF,MAAM,CAAClF;AAFjB;;AAIF,SAAKJ,SAAL;AACE,+CACKqF,KADL;AAEED,QAAAA,KAAK,EAAEE,MAAM,CAAClF;AAFhB;;AAIF;AACE,aAAOiF,KAAP;AAZJ;AAcD;;AClBD,IAAMF,cAAY,GAAG;AACnBZ,EAAAA,KAAK,EAAE,EADY;AAEnBf,EAAAA,WAAW,EAAE,EAFM;AAGnBS,EAAAA,qBAAqB,EAAE,IAHJ;AAInBV,EAAAA,YAAY,EAAE,EAJK;AAKnBE,EAAAA,sBAAsB,EAAE,IALL;AAMnBd,EAAAA,WAAW,EAAE,EANM;AAOnBe,EAAAA,OAAO,EAAE,IAPU;AAQnBR,EAAAA,SAAS,EAAExB;AARQ,CAArB;AAWA,AAAe,qBAAwC;AAAA,MAA9B2D,KAA8B,uEAAtBF,cAAsB;AAAA,MAARG,MAAQ;;AACrD,UAAQA,MAAM,CAACnF,IAAf;AACE,SAAK2B,YAAL;AACE,aAAOpC,SAAS,CAAC4F,MAAM,CAAClF,OAAR,CAAhB;;AACF,SAAKU,WAAL;AAAkB;AAChB,YAAMyE,OAAO,GAAG7F,SAAS,CAAC4F,MAAM,CAAClF,OAAR,CAAzB;AACA,YAAMoF,QAAQ,GAAG9F,SAAS,CAAC2F,KAAK,CAACd,KAAP,CAA1B;AACAiB,QAAAA,QAAQ,CAAC7G,IAAI,CAAC2F,EAAL,CAAQiB,OAAR,CAAD,CAAR,GAA6BA,OAA7B;AACA,iDACK7F,SAAS,CAAC2F,KAAD,CADd;AAEEd,UAAAA,KAAK,EAAEiB;AAFT;AAID;;AACD,SAAKzD,cAAL;AACE,+CACKrC,SAAS,CAACyF,cAAD,CADd;AAEEjC,QAAAA,SAAS,EAAEmC,KAAK,CAACnC;AAFnB;;AAIF;AACE,aAAOmC,KAAP;AAlBJ;AAoBD;;ACxBD,IAAMF,cAAY,GAAG;AACnBtG,EAAAA,GAAG,EAAE,EADc;AAEnB4G,EAAAA,QAAQ,EAAE,CAFS;AAGnB7G,EAAAA,IAAI,EAAE,IAHa;AAInB8G,EAAAA,WAAW,EAAE,CAJM;AAKnBC,EAAAA,SAAS,EAAE,CALQ;AAMnBC,EAAAA,YAAY,EAAE,IANK;AAOnBC,EAAAA,MAAM,EAAE;AAPW,CAArB;AAUA,AAEe,oBAAwC;AAAA,MAA9BR,KAA8B,uEAAtBF,cAAsB;AAAA,MAARG,MAAQ;;AACrD,UAAQA,MAAM,CAACnF,IAAf;AACE,SAAK4B,cAAL;AACE,aAAOrC,SAAS,CAACyF,cAAD,CAAhB;;AACF,SAAKrD,YAAL;AACE,+CACKuD,KADL;AAEEzG,QAAAA,IAAI,EAAE0G,MAAM,CAAClF,OAAP,CAAesD,OAAf,GACFhE,SAAS,CAAC4F,MAAM,CAAClF,OAAP,CAAemE,KAAf,CAAqBe,MAAM,CAAClF,OAAP,CAAesD,OAApC,CAAD,CADP,GACwD,IAHhE;AAIE7E,QAAAA,GAAG,EAAEyG,MAAM,CAAClF,OAAP,CAAesD,OAAf,GACD4B,MAAM,CAAClF,OAAP,CAAemE,KAAf,CAAqBe,MAAM,CAAClF,OAAP,CAAesD,OAApC,EAA6C7E,GAA7C,YAA4DC,KAA5D,GACEwG,MAAM,CAAClF,OAAP,CAAemE,KAAf,CAAqBe,MAAM,CAAClF,OAAP,CAAesD,OAApC,EAA6C7E,GAA7C,CAAiD,CAAjD,CADF,GAEEyG,MAAM,CAAClF,OAAP,CAAemE,KAAf,CAAqBe,MAAM,CAAClF,OAAP,CAAesD,OAApC,EAA6C7E,GAH9C,GAID,EARN;AASE4G,QAAAA,QAAQ,EAAE;AATZ;;AAWF,SAAK3E,WAAL;AACE,+CACKuE,KADL;AAEEzG,QAAAA,IAAI,EAAEyG,KAAK,CAACzG,IAAN,GACFD,IAAI,CAAC2F,EAAL,CAAQe,KAAK,CAACzG,IAAd,MAAwBD,IAAI,CAAC2F,EAAL,CAAQgB,MAAM,CAAClF,OAAf,CAAxB,GACEV,SAAS,CAAC4F,MAAM,CAAClF,OAAR,CADX,GAC8BV,SAAS,CAAC2F,KAAK,CAACzG,IAAP,CAFrC,GAGF;AALN;;AAOF,SAAKiC,QAAL;AAAe;AACb,YAAMiF,KAAK,GAAGT,KAAK,CAACI,QAAN,GAAiB,CAA/B;AACA,iDACK/F,SAAS,CAAC2F,KAAD,CADd;AAEEI,UAAAA,QAAQ,EAAEK,KAFZ;AAGEjH,UAAAA,GAAG,EAAEwG,KAAK,CAACzG,IAAN,CAAWC,GAAX,CAAeiH,KAAf;AAHP;AAKD;;AACD,SAAKrF,gBAAL;AACE,+CACKf,SAAS,CAAC2F,KAAD,CADd;AAEEK,QAAAA,WAAW,EAAEJ,MAAM,CAAClF;AAFtB;;AAIF,SAAKM,cAAL;AACE,+CACKhB,SAAS,CAAC2F,KAAD,CADd;AAEEM,QAAAA,SAAS,EAAEL,MAAM,CAAClF;AAFpB;;AAIF,SAAKO,iBAAL;AACE,+CACKjB,SAAS,CAAC2F,KAAD,CADd;AAEEO,QAAAA,YAAY,EAAElG,SAAS,CAAC4F,MAAM,CAAClF,OAAR;AAFzB;;AAIF,SAAKQ,SAAL;AACE,+CACKlB,SAAS,CAAC2F,KAAD,CADd;AAEEK,QAAAA,WAAW,EAAEJ,MAAM,CAAClF,OAAP,CAAesF,WAF9B;AAGEC,QAAAA,SAAS,EAAEL,MAAM,CAAClF,OAAP,CAAeuF,SAH5B;AAIEC,QAAAA,YAAY,EAAElG,SAAS,CAAC4F,MAAM,CAAClF,OAAP,CAAewF,YAAhB;AAJzB;;AAMF,SAAKrF,KAAL;AACE,+CACKb,SAAS,CAAC2F,KAAD,CADd;AAEEQ,QAAAA,MAAM,EAAE;AAFV;;AAIF,SAAKrF,IAAL;AACE,+CACKd,SAAS,CAAC2F,KAAD,CADd;AAEEQ,QAAAA,MAAM,EAAE;AAFV;;AAIF;AACE,aAAOR,KAAP;AAhEJ;AAkED;;ACpFD,eAAeU,eAAe,CAAC;AAC7BC,EAAAA,MAAM,EAANA,MAD6B;AAE7BtC,EAAAA,OAAO,EAAPA,OAF6B;AAG7BL,EAAAA,QAAQ,EAARA;AAH6B,CAAD,CAA9B;AAMA,AAAO,SAAS4C,SAAT,CAAoBZ,KAApB,EAA2B;AAChC,MAAMa,aAAa,GAAGxG,SAAS,CAAC2F,KAAD,CAA/B;AACA,SAAOa,aAAa,CAACxC,OAArB;AACA,SAAOwC,aAAP;AACD;AAED,AAAO,SAASC,SAAT,CAAoBd,KAApB,EAA2B;AAChC,MAAMe,aAAa,GAAG1G,SAAS,CAAC2F,KAAD,CAA/B;AACAe,EAAAA,aAAa,CAAC1C,OAAd,GAAwB2C,cAAxB;AACAD,EAAAA,aAAa,CAAC1C,OAAd,CAAsB9E,IAAtB,GAA6BwH,aAAa,CAAC/C,QAAd,CAAuBK,OAAvB,GACzB0C,aAAa,CAAC/C,QAAd,CAAuBkB,KAAvB,CAA6B6B,aAAa,CAAC/C,QAAd,CAAuBK,OAApD,CADyB,GACsC,IADnE;AAEA0C,EAAAA,aAAa,CAAC1C,OAAd,CAAsB7E,GAAtB,GAA4BuH,aAAa,CAAC1C,OAAd,CAAsB9E,IAAtB,GACxBwH,aAAa,CAAC1C,OAAd,CAAsB9E,IAAtB,CAA2BC,GAA3B,YAA0CC,KAA1C,GACEsH,aAAa,CAAC1C,OAAd,CAAsB9E,IAAtB,CAA2BC,GAA3B,CAA+B,CAA/B,CADF,GAEEuH,aAAa,CAAC1C,OAAd,CAAsB9E,IAAtB,CAA2BC,GAHL,GAIxB,IAJJ;AAKA,SAAOuH,aAAP;AACD;;ICXYE,MAAb;AAyBE,kBAAaC,eAAb,EAA8B;AAAA;;AAAA;;AAC5B,SAAKC,MAAL,GAAcD,eAAe,GACzBE,WAAW,CAACC,QAAD,EAAWP,SAAS,CAACI,eAAD,CAApB,EAAuCI,mBAAmB,CAACC,eAAe,CAACC,KAAD,CAAhB,CAA1D,CADc,GAEzBJ,WAAW,CAACC,QAAD,EAAWC,mBAAmB,CAACC,eAAe,CAACC,KAAD,CAAhB,CAA9B,CAFf;AAIA,SAAKC,IAAL,GAAY,IAAIC,MAAM,CAACC,KAAX,EAAZ;;AAEA,SAAKF,IAAL,CAAUG,gBAAV,CAA2B,SAA3B,EAAsC,YAAM;AAC1C,MAAA,KAAI,CAACC,SAAL,CAAe9F,eAAe,CAAClC,UAAU,CAACiI,OAAX,CAAmB,KAAI,CAACL,IAAL,CAAUzF,QAA7B,CAAD,CAA9B;AACD,KAFD;;AAGA,SAAKyF,IAAL,CAAUG,gBAAV,CAA2B,gBAA3B,EAA6C,YAAM;AACjD,MAAA,KAAI,CAACC,SAAL,CAAe9F,eAAe,CAAClC,UAAU,CAACiI,OAAX,CAAmB,KAAI,CAACL,IAAL,CAAUzF,QAA7B,CAAD,CAA9B;AACD,KAFD;;AAGA,SAAKyF,IAAL,CAAUG,gBAAV,CAA2B,gBAA3B,EAA6C,YAAM;AACjD,MAAA,KAAI,CAACC,SAAL,CAAe/F,YAAY,CAAC,KAAI,CAAC2F,IAAL,CAAUM,QAAX,CAA3B;AACD,KAFD;;AAGA,SAAKN,IAAL,CAAUG,gBAAV,CAA2B,OAA3B,EAAoC,YAAM;AACxC,MAAA,KAAI,CAACC,SAAL,CAAehD,QAAQ,EAAvB;;AACA,MAAA,KAAI,CAACmD,qBAAL;;AACA,MAAA,KAAI,CAACC,YAAL;AACD,KAJD;;AAKA,SAAKR,IAAL,CAAUG,gBAAV,CAA2B,OAA3B,EAAoC,YAAM;AACxC,UAAM5B,KAAK,GAAG,KAAI,CAACjC,QAAL,EAAd;;AACA,UAAIiC,KAAK,CAAC3B,OAAN,CAAc9E,IAAd,KAAuB,IAA3B,EAAiC;;AACjC,UAAIyG,KAAK,CAAC3B,OAAN,CAAc9E,IAAd,CAAmBC,GAAnB,YAAkCC,KAAlC,IACFuG,KAAK,CAAC3B,OAAN,CAAc+B,QAAd,GAAyB,CAAzB,GAA6BJ,KAAK,CAAC3B,OAAN,CAAc9E,IAAd,CAAmBC,GAAnB,CAAuBO,MADtD,EAC8D;AAC5D,QAAA,KAAI,CAAC8H,SAAL,CAAe1F,OAAO,EAAtB;AACD,OAHD,MAGO;AACL,QAAA,KAAI,CAAC0F,SAAL,CAAehD,QAAQ,EAAvB;AACD;;AACD,MAAA,KAAI,CAACmD,qBAAL;;AACA,UAAI,CAAChC,KAAK,CAAC3B,OAAN,CAAcmC,MAAnB,EAA2B,KAAI,CAACyB,YAAL;AAC5B,KAXD;;AAYA,SAAKR,IAAL,CAAUG,gBAAV,CAA2B,gBAA3B,EAA6C,YAAM;AACjD,MAAA,KAAI,CAACC,SAAL,CAAe/F,YAAY,CAAC,KAAI,CAAC2F,IAAL,CAAUM,QAAX,CAA3B;AACD,KAFD;;AAGA,SAAKN,IAAL,CAAUG,gBAAV,CAA2B,OAA3B,EAAoC,YAAM;AACxC,MAAA,KAAI,CAACC,SAAL,CAAenG,KAAK,EAApB;AACD,KAFD;;AAGA,SAAK+F,IAAL,CAAUG,gBAAV,CAA2B,MAA3B,EAAmC,YAAM;AACvC,MAAA,KAAI,CAACC,SAAL,CAAelG,IAAI,EAAnB;AACD,KAFD;;AAGA,SAAK8F,IAAL,CAAUG,gBAAV,CAA2B,UAA3B,EAAuC,YAAM;AAC3C,MAAA,KAAI,CAACC,SAAL,CAAe9F,eAAe,CAAClC,UAAU,CAACiI,OAAX,CAAmB,KAAI,CAACL,IAAL,CAAUzF,QAA7B,CAAD,CAA9B;AACD,KAFD;;AAGA,SAAKyF,IAAL,CAAUG,gBAAV,CAA2B,YAA3B,EAAyC,YAAM;AAC7C,MAAA,KAAI,CAACC,SAAL,CAAe7G,QAAQ,CAAC,KAAI,CAACyG,IAAL,CAAUS,YAAX,CAAvB;AACD,KAFD;;AAGA,SAAKT,IAAL,CAAUG,gBAAV,CAA2B,YAA3B,EAAyC,YAAM;AAC7C,MAAA,KAAI,CAACC,SAAL,CAAe5F,QAAQ,CAAC;AACtBoE,QAAAA,WAAW,EAAE,KAAI,CAACoB,IAAL,CAAUpB,WADD;AAEtBC,QAAAA,SAAS,EAAE,KAAI,CAACmB,IAAL,CAAUM,QAFC;AAGtBxB,QAAAA,YAAY,EAAE1G,UAAU,CAACiI,OAAX,CAAmB,KAAI,CAACL,IAAL,CAAUzF,QAA7B;AAHQ,OAAD,CAAvB;AAKD,KAND;;AAOA,SAAKyF,IAAL,CAAUG,gBAAV,CAA2B,cAA3B,EAA2C,YAAM;AAC/C,UAAI,KAAI,CAACH,IAAL,CAAUU,KAAd,EAAqB,KAAI,CAACN,SAAL,CAAejH,SAAS,CAAC,CAAD,CAAxB,EAArB,KACK,KAAI,CAACiH,SAAL,CAAejH,SAAS,CAAC,KAAI,CAAC6G,IAAL,CAAU5G,MAAX,CAAxB;AACN,KAHD;;AAKA,SAAKuH,UAAL,GAAkB,EAAlB;AACD;;AAtFH;AAAA;AAAA,SACE,eAAW;AACT,aAAO,KAAKX,IAAZ;AACD;AAHH;AAAA;AAAA,SAKE,eAAa;AACX,aAAO,KAAKN,MAAZ;AACD;AAPH;AAAA;AAAA,SASE,eAAiB;AACf,aAAO,KAAKA,MAAL,CAAYrD,QAAnB;AACD;AAXH;AAAA;AAAA,SAaE,eAAgB;AACd,aAAO,KAAKqD,MAAL,CAAYpD,QAAnB;AACD;AAfH;AAAA;AAAA,SAiBE,eAAiB;AACf,aAAO,KAAKsE,UAAL,IAAmB,KAA1B;AACD;AAnBH;AAAA;AAAA,SAqBE,eAAe;AACb,aAAOC,OAAP;AACD;AAvBH;AAAA;AAAA,WAwFE,mBAAW;AACT,WAAKD,UAAL,GAAkB,IAAlB;;AADS,iDAEU,KAAKD,UAFf;AAAA;;AAAA;AAET,4DAAoC;AAAA,cAAzB7C,IAAyB;AAClCA,UAAAA,IAAI,CAACgD,KAAL;AACD;AAJQ;AAAA;AAAA;AAAA;AAAA;;AAKT,WAAKH,UAAL,GAAkB,EAAlB;AACA,WAAKI,OAAL;;AACA,WAAKf,IAAL,CAAUgB,eAAV,CAA0B,KAA1B;;AACA,WAAKhB,IAAL,CAAUiB,IAAV;AACD;AAjGH;AAAA;AAAA,WAmGE,mBAAWC,QAAX,EAAqB;AAAA;;AACnB,UAAMC,CAAC,GAAG,KAAKR,UAAL,CAAgBS,IAAhB,CAAqB,UAAAtD,IAAI;AAAA,eAAIA,IAAI,CAACoD,QAAL,KAAkBA,QAAtB;AAAA,OAAzB,CAAV;;AACA,UAAIC,CAAJ,EAAO;AACL,eAAOA,CAAC,CAACL,KAAT;AACD;;AACD,UAAMA,KAAK,GAAG,KAAKpB,MAAL,CAAY2B,SAAZ,CAAsB;AAAA,eAAMH,QAAQ,CAAC,MAAI,CAAC5E,QAAL,EAAD,CAAd;AAAA,OAAtB,CAAd;;AACA,WAAKqE,UAAL,CAAgBlI,IAAhB,CAAqB;AACnByI,QAAAA,QAAQ,EAARA,QADmB;AAEnBJ,QAAAA,KAAK,EAALA;AAFmB,OAArB;;AAIA,aAAOA,KAAP;AACD;AA9GH;AAAA;AAAA,WAgHE,qBAAaI,QAAb,EAAuB;AACrB,UAAMC,CAAC,GAAG,KAAKR,UAAL,CAAgBS,IAAhB,CAAqB,UAAAtD,IAAI;AAAA,eAAIA,IAAI,CAACoD,QAAL,KAAkBA,QAAtB;AAAA,OAAzB,CAAV;;AACA,UAAIC,CAAJ,EAAO;AACLA,QAAAA,CAAC,CAACL,KAAF;AACA,aAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgB9C,MAAhB,CAAuB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACoD,QAAL,KAAkBA,QAAtB;AAAA,SAA3B,CAAlB;AACD;AACF;AAtHH;AAAA;AAAA,WAwHE,qBAAa;AACX,aAAO/B,SAAS,CAAC,KAAK7C,QAAL,EAAD,CAAhB;AACD;AA1HH;AAAA;AAAA,WA4HE,eAAOgF,UAAP,EAAmB9D,EAAnB,EAAuB;AACrB,UAAI,OAAO8D,UAAP,KAAsB,QAAtB,IAAkC9D,EAAtC,EAA0C;AACxC,aAAKwC,IAAL,CAAUxC,EAAV,GAAe,OAAO8D,UAAP,KAAsB,QAAtB,GACXA,UADW,GACE9D,EADjB;AAED;;AACD,UAAM+D,MAAM,GAAGD,UAAU,YAAYrB,MAAM,CAACuB,WAA7B,GACXF,UADW,GACEG,QAAQ,CAACC,IAD1B;AAEAH,MAAAA,MAAM,CAACI,WAAP,CAAmB,KAAK3B,IAAxB;AACD;AApIH;AAAA;AAAA,WAsIE,mBAAW;AACT,WAAKA,IAAL,CAAU4B,MAAV;AACD;AAxIH;AAAA;AAAA,WA0IE,iCAAyB;AACvB,UAAMrD,KAAK,GAAG,KAAKjC,QAAL,EAAd;;AACA,UAAIzE,IAAI,CAAC2F,EAAL,CAAQe,KAAK,CAAC3B,OAAd,MAA2B/E,IAAI,CAAC2F,EAAL,CAAQ,KAAKwC,IAAb,CAA/B,EAAmD;AACjD,YAAIzB,KAAK,CAAC3B,OAAN,CAAc7E,GAAlB,EAAuB,KAAKiI,IAAL,CAAUjI,GAAV,GAAgBwG,KAAK,CAAC3B,OAAN,CAAc7E,GAA9B,CAAvB,KACK;AACH,eAAKiI,IAAL,CAAUgB,eAAV,CAA0B,KAA1B;;AACA,eAAKhB,IAAL,CAAUiB,IAAV;AACD;AACF;AACF;AAnJH;AAAA;AAAA,WAqJE,wBAAgB;AACd,WAAKjB,IAAL,CAAUpB,WAAV,GAAwB,CAAxB;;AACA,WAAKoB,IAAL,CAAU9F,IAAV;AACD;AAxJH;AAAA;AAAA,WA0JE,iBAAS;AACP,WAAK8F,IAAL,CAAU/F,KAAV;AACD;AA5JH;AAAA;AAAA,WA8JE,gBAAQ;AACN,WAAK+F,IAAL,CAAU9F,IAAV;AACD;AAhKH;AAAA;AAAA,WAkKE,sBAAc;AACZ,UAAMqE,KAAK,GAAG,KAAKjC,QAAL,EAAd;;AACA,UAAIiC,KAAK,CAAC3B,OAAN,CAAcmC,MAAlB,EAA0B;AACxB,aAAKiB,IAAL,CAAU9F,IAAV;AACD,OAFD,MAEO,KAAK8F,IAAL,CAAU/F,KAAV;AACR;AAvKH;AAAA;AAAA,WAyKE,0BAAgBG,IAAhB,EAAsB;AACpB,WAAK4F,IAAL,CAAUpB,WAAV,GAAwBxE,IAAxB;;AACA,WAAKgG,SAAL,CAAejG,cAAc,CAACC,IAAD,CAA7B;AACD;AA5KH;AAAA;AAAA,WA8KE,kBAAQ;AACN,WAAKgG,SAAL,CAAenD,IAAI,EAAnB;;AACA,WAAKsD,qBAAL;;AACA,WAAKC,YAAL;AACD;AAlLH;AAAA;AAAA,WAoLE,sBAAY;AACV,WAAKJ,SAAL,CAAe/C,QAAQ,EAAvB;;AACA,WAAKkD,qBAAL;;AACA,WAAKC,YAAL;AACD;AAxLH;AAAA;AAAA,WA0LE,wBAAcpE,SAAd,EAAyB;AACvB,WAAKgE,SAAL,CAAejE,YAAY,CAACC,SAAD,CAA3B;AACD;AA5LH;AAAA;AAAA,WA8LE,2BAAiB;AACf,WAAKgE,SAAL,CAAevD,aAAa,EAA5B;AACD;AAhMH;AAAA;AAAA,WAkME,0BAAgB/E,IAAhB,EAAsB;AACpB,WAAKsI,SAAL,CAAe9C,cAAc,CAACxF,IAAD,CAA7B;;AACA,WAAKyI,qBAAL;;AACA,WAAKC,YAAL;AACD;AAtMH;AAAA;AAAA,WAwME,uBAAa1I,IAAb,EAAmB;AACjB,WAAKsI,SAAL,CAAe1C,WAAW,CAAC5F,IAAD,CAA1B;;AACA,WAAKyI,qBAAL;AACD;AA3MH;AAAA;AAAA,WA6ME,sBAAYzI,IAAZ,EAAkB;AAChB,WAAKsI,SAAL,CAAerC,UAAU,CAACjG,IAAD,CAAzB;;AACA,WAAKyI,qBAAL;AACD;AAhNH;AAAA;AAAA,WAkNE,uBAAa9C,KAAb,EAAoBS,WAApB,EAAiC9B,SAAjC,EAA4C;AAC1C,WAAKgE,SAAL,CAAenC,WAAW,CAACR,KAAD,EAAQS,WAAR,EAAqB9B,SAArB,CAA1B;;AACA,WAAKmE,qBAAL;AACD;AArNH;AAAA;AAAA,WAuNE,2BAAiB;AACf,WAAKH,SAAL,CAAehC,aAAa,EAA5B;;AACA,WAAKmC,qBAAL;AACD;AA1NH;AAAA;AAAA,WA4NE,sBAAYzI,IAAZ,EAAkB;AAChB,WAAKsI,SAAL,CAAezF,UAAU,CAAC7C,IAAD,CAAzB;AACD;AA9NH;AAAA;AAAA,WAgOE,qBAAWsB,MAAX,EAAmB;AACjB,WAAKgH,SAAL,CAAejH,SAAS,CAACC,MAAD,CAAxB;;AACA,WAAK4G,IAAL,CAAU5G,MAAV,GAAmBA,MAAnB;AACD;AAnOH;AAAA;AAAA,WAqOE,oBAAUI,SAAV,EAAqB;AACnB,WAAK4G,SAAL,CAAe7G,QAAQ,CAACC,SAAD,CAAvB;;AACA,WAAKwG,IAAL,CAAUS,YAAV,GAAyBjH,SAAzB;AACD;AAxOH;;AAAA;AAAA;;;;;"}