{"version":3,"sources":["webpack://Kokoro/webpack/universalModuleDefinition","webpack://Kokoro/webpack/bootstrap","webpack://Kokoro/./node_modules/redux/es/redux.js","webpack://Kokoro/./node_modules/redux-devtools-extension/index.js","webpack://Kokoro/./node_modules/symbol-observable/es/index.js","webpack://Kokoro/./node_modules/symbol-observable/es/ponyfill.js","webpack://Kokoro/(webpack)/buildin/global.js","webpack://Kokoro/(webpack)/buildin/harmony-module.js","webpack://Kokoro/./node_modules/redux-thunk/es/index.js","webpack://Kokoro/./src/helpers.js","webpack://Kokoro/./src/actions/player.js","webpack://Kokoro/./src/actions/playing.js","webpack://Kokoro/./src/constants.js","webpack://Kokoro/./src/actions/playlist.js","webpack://Kokoro/./src/reducers/player.js","webpack://Kokoro/./src/reducers/playlist.js","webpack://Kokoro/./src/reducers/playing.js","webpack://Kokoro/./src/reducers/index.js","webpack://Kokoro/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","arguments","Error","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","index","indexOf","splice","dispatch","action","type","listeners","length","replaceReducer","nextReducer","observable","_ref","outerSubscribe","observer","TypeError","observeState","next","unsubscribe","this","getUndefinedStateErrorMessage","actionType","String","combineReducers","reducers","reducerKeys","keys","finalReducers","shapeAssertionError","finalReducerKeys","forEach","assertReducerShape","e","state","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","compose","_len","funcs","Array","arg","reduce","a","b","applyMiddleware","middlewares","store","_dispatch","middlewareAPI","chain","map","middleware","composeWithDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","devToolsEnhancer","__REDUX_DEVTOOLS_EXTENSION__","noop","self","global","result","symbolObservablePonyfill","g","Function","originalModule","webpackPolyfill","children","createThunkMiddleware","extraArgument","thunk","withExtraArgument","Song","song","src","encodeURI","good","decodeURI","TimeRanges","timeRanges","arr","start","end","cloneDeep","JSON","parse","stringify","SET_VOLUME","SET_SPEED","setVolume","volume","payload","setSpeed","speedRate","PAUSE","PLAY","SET_CURRENT_TIME","SET_TOTAL_TIME","SET_BUFFERED_TIME","SET_TIMES","NEXT_SRC","UPDATE_SONG","pause","play","setCurrentTime","time","setTotalTime","setBufferedTime","buffered","setTimes","times","nextSrc","updateSong","PLAY_ORDER_LOOP","PLAY_ORDER_SINGLE","PLAY_ORDER_SHUFFLE","PLAY_ORDER","SET_PLAYLIST","CLEAR_PLAYLIST","shuffle","original","shuffled","sort","swap","swapped","createSetPlaylistAction","pushHistory","historyList","newHistoryList","historyIndex","unshift","setPlayOrder","playOrder","playlist","newPlaylistState","shuffledList","orderedList","shuffledIndexOfPlaying","playing","nextPlayOrder","currentPlayOrder","currentPlayOrderIndex","nextPlayOrderIndex","newShuffledList","orderedIndexOfPlaying","autoNext","previous","setCurrentSong","songId","id","songs","setNextSong","orderedIndexReduction","item","removeSong","shuffledIndexReduction","setPlaylist","currentSong","currentSongValid","clearPlaylist","initialState","speed","srcIndex","currentTime","totalTime","bufferedTime","paused","player","srcId","newSong","newSongs","Kokoro","initializeState","importedState","_store","initialPlayingState","Audio","addEventListener","toArray","duration","_onSrcProbablyChanged","_triggerPlay","playbackRate","muted","_listeners","_destroyed","version","unsub","unmount","removeAttribute","load","find","exportedState","parentNode","HTMLElement","document","body","appendChild","remove"],"mappings":";;;;;;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,IARnB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,+BClFrD,mTAQIC,EAAe,WACjB,OAAOC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAAGC,MAAM,IAAIC,KAAK,MAG5DC,EAAc,CAChBC,KAAM,eAAiBR,IACvBS,QAAS,kBAAoBT,IAC7BU,qBAAsB,WACpB,MAAO,+BAAiCV,MAQ5C,SAASW,EAAcC,GACrB,GAAmB,iBAARA,GAA4B,OAARA,EAAc,OAAO,EAGpD,IAFA,IAAIC,EAAQD,EAE4B,OAAjClC,OAAOoC,eAAeD,IAC3BA,EAAQnC,OAAOoC,eAAeD,GAGhC,OAAOnC,OAAOoC,eAAeF,KAASC,EA6BxC,SAASE,EAAYC,EAASC,EAAgBC,GAC5C,IAAIC,EAEJ,GAA8B,mBAAnBF,GAAqD,mBAAbC,GAA+C,mBAAbA,GAAmD,mBAAjBE,UAAU,GAC/H,MAAM,IAAIC,MAAM,uJAQlB,GAL8B,mBAAnBJ,QAAqD,IAAbC,IACjDA,EAAWD,EACXA,OAAiBK,QAGK,IAAbJ,EAA0B,CACnC,GAAwB,mBAAbA,EACT,MAAM,IAAIG,MAAM,2CAGlB,OAAOH,EAASH,EAATG,CAAsBF,EAASC,GAGxC,GAAuB,mBAAZD,EACT,MAAM,IAAIK,MAAM,0CAGlB,IAAIE,EAAiBP,EACjBQ,EAAeP,EACfQ,EAAmB,GACnBC,EAAgBD,EAChBE,GAAgB,EASpB,SAASC,IACHF,IAAkBD,IACpBC,EAAgBD,EAAiBI,SAUrC,SAASC,IACP,GAAIH,EACF,MAAM,IAAIN,MAAM,wMAGlB,OAAOG,EA2BT,SAASO,EAAUC,GACjB,GAAwB,mBAAbA,EACT,MAAM,IAAIX,MAAM,2CAGlB,GAAIM,EACF,MAAM,IAAIN,MAAM,6TAGlB,IAAIY,GAAe,EAGnB,OAFAL,IACAF,EAAcQ,KAAKF,GACZ,WACL,GAAKC,EAAL,CAIA,GAAIN,EACF,MAAM,IAAIN,MAAM,kKAGlBY,GAAe,EACfL,IACA,IAAIO,EAAQT,EAAcU,QAAQJ,GAClCN,EAAcW,OAAOF,EAAO,GAC5BV,EAAmB,OA8BvB,SAASa,EAASC,GAChB,IAAK5B,EAAc4B,GACjB,MAAM,IAAIlB,MAAM,2EAGlB,QAA2B,IAAhBkB,EAAOC,KAChB,MAAM,IAAInB,MAAM,sFAGlB,GAAIM,EACF,MAAM,IAAIN,MAAM,sCAGlB,IACEM,GAAgB,EAChBH,EAAeD,EAAeC,EAAce,GAC5C,QACAZ,GAAgB,EAKlB,IAFA,IAAIc,EAAYhB,EAAmBC,EAE1B1D,EAAI,EAAGA,EAAIyE,EAAUC,OAAQ1E,IAAK,EAEzCgE,EADeS,EAAUzE,MAI3B,OAAOuE,EAcT,SAASI,EAAeC,GACtB,GAA2B,mBAAhBA,EACT,MAAM,IAAIvB,MAAM,8CAGlBE,EAAiBqB,EAKjBN,EAAS,CACPE,KAAMjC,EAAYE,UAWtB,SAASoC,IACP,IAAIC,EAEAC,EAAiBhB,EACrB,OAAOe,EAAO,CASZf,UAAW,SAAmBiB,GAC5B,GAAwB,iBAAbA,GAAsC,OAAbA,EAClC,MAAM,IAAIC,UAAU,0CAGtB,SAASC,IACHF,EAASG,MACXH,EAASG,KAAKrB,KAMlB,OAFAoB,IAEO,CACLE,YAFgBL,EAAeG,OAK7B,KAAgB,WACtB,OAAOG,MACNP,EASL,OAHAR,EAAS,CACPE,KAAMjC,EAAYC,QAEbW,EAAQ,CACbmB,SAAUA,EACVP,UAAWA,EACXD,SAAUA,EACVa,eAAgBA,IACT,KAAgBE,EAAY1B,EA0BvC,SAASmC,EAA8B/D,EAAKgD,GAC1C,IAAIgB,EAAahB,GAAUA,EAAOC,KAElC,MAAO,UADiBe,GAAc,WAAcC,OAAOD,GAAc,KAAQ,aAC3C,cAAiBhE,EAAhD,iLAgET,SAASkE,EAAgBC,GAIvB,IAHA,IAAIC,EAAcjF,OAAOkF,KAAKF,GAC1BG,EAAgB,GAEX7F,EAAI,EAAGA,EAAI2F,EAAYjB,OAAQ1E,IAAK,CAC3C,IAAIuB,EAAMoE,EAAY3F,GAElB,EAMyB,mBAAlB0F,EAASnE,KAClBsE,EAActE,GAAOmE,EAASnE,IAIlC,IASIuE,EATAC,EAAmBrF,OAAOkF,KAAKC,GAWnC,KAjEF,SAA4BH,GAC1BhF,OAAOkF,KAAKF,GAAUM,SAAQ,SAAUzE,GACtC,IAAIyB,EAAU0C,EAASnE,GAKvB,QAA4B,IAJTyB,OAAQM,EAAW,CACpCkB,KAAMjC,EAAYC,OAIlB,MAAM,IAAIa,MAAM,YAAe9B,EAAf,iRAGlB,QAEO,IAFIyB,OAAQM,EAAW,CAC5BkB,KAAMjC,EAAYG,yBAElB,MAAM,IAAIW,MAAM,YAAe9B,EAAf,6EAA0GgB,EAAYC,KAAtH,kTAoDlByD,CAAmBJ,GACnB,MAAOK,GACPJ,EAAsBI,EAGxB,OAAO,SAAqBC,EAAO5B,GAKjC,QAJc,IAAV4B,IACFA,EAAQ,IAGNL,EACF,MAAMA,EAcR,IAX2C,IAQvCM,GAAa,EACbC,EAAY,GAEPC,EAAK,EAAGA,EAAKP,EAAiBrB,OAAQ4B,IAAM,CACnD,IAAIC,EAAOR,EAAiBO,GACxBtD,EAAU6C,EAAcU,GACxBC,EAAsBL,EAAMI,GAC5BE,EAAkBzD,EAAQwD,EAAqBjC,GAEnD,QAA+B,IAApBkC,EAAiC,CAC1C,IAAIC,EAAepB,EAA8BiB,EAAMhC,GACvD,MAAM,IAAIlB,MAAMqD,GAGlBL,EAAUE,GAAQE,EAClBL,EAAaA,GAAcK,IAAoBD,EAIjD,OADAJ,EAAaA,GAAcL,EAAiBrB,SAAWhE,OAAOkF,KAAKO,GAAOzB,QACtD2B,EAAYF,GAIpC,SAASQ,EAAkBC,EAAetC,GACxC,OAAO,WACL,OAAOA,EAASsC,EAAcC,MAAMxB,KAAMjC,aA0B9C,SAAS0D,EAAmBC,EAAgBzC,GAC1C,GAA8B,mBAAnByC,EACT,OAAOJ,EAAkBI,EAAgBzC,GAG3C,GAA8B,iBAAnByC,GAAkD,OAAnBA,EACxC,MAAM,IAAI1D,MAAM,0EAA+F,OAAnB0D,EAA0B,cAAgBA,GAAtH,8FAGlB,IAAIC,EAAsB,GAE1B,IAAK,IAAIzF,KAAOwF,EAAgB,CAC9B,IAAIH,EAAgBG,EAAexF,GAEN,mBAAlBqF,IACTI,EAAoBzF,GAAOoF,EAAkBC,EAAetC,IAIhE,OAAO0C,EAGT,SAASC,EAAgBrE,EAAKrB,EAAKN,GAYjC,OAXIM,KAAOqB,EACTlC,OAAOC,eAAeiC,EAAKrB,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZsG,cAAc,EACdC,UAAU,IAGZvE,EAAIrB,GAAON,EAGN2B,EAGT,SAASwE,EAAQ1F,EAAQ2F,GACvB,IAAIzB,EAAOlF,OAAOkF,KAAKlE,GASvB,OAPIhB,OAAO4G,uBACT1B,EAAK1B,KAAK2C,MAAMjB,EAAMlF,OAAO4G,sBAAsB5F,IAGjD2F,IAAgBzB,EAAOA,EAAK2B,QAAO,SAAUC,GAC/C,OAAO9G,OAAO+G,yBAAyB/F,EAAQ8F,GAAK5G,eAE/CgF,EAGT,SAAS8B,EAAeC,GACtB,IAAK,IAAI3H,EAAI,EAAGA,EAAIoD,UAAUsB,OAAQ1E,IAAK,CACzC,IAAI4H,EAAyB,MAAhBxE,UAAUpD,GAAaoD,UAAUpD,GAAK,GAE/CA,EAAI,EACNoH,EAAQQ,GAAQ,GAAM5B,SAAQ,SAAUzE,GACtC0F,EAAgBU,EAAQpG,EAAKqG,EAAOrG,OAE7Bb,OAAOmH,0BAChBnH,OAAOoH,iBAAiBH,EAAQjH,OAAOmH,0BAA0BD,IAEjER,EAAQQ,GAAQ5B,SAAQ,SAAUzE,GAChCb,OAAOC,eAAegH,EAAQpG,EAAKb,OAAO+G,yBAAyBG,EAAQrG,OAKjF,OAAOoG,EAaT,SAASI,IACP,IAAK,IAAIC,EAAO5E,UAAUsB,OAAQuD,EAAQ,IAAIC,MAAMF,GAAOzB,EAAO,EAAGA,EAAOyB,EAAMzB,IAChF0B,EAAM1B,GAAQnD,UAAUmD,GAG1B,OAAqB,IAAjB0B,EAAMvD,OACD,SAAUyD,GACf,OAAOA,GAIU,IAAjBF,EAAMvD,OACDuD,EAAM,GAGRA,EAAMG,QAAO,SAAUC,EAAGC,GAC/B,OAAO,WACL,OAAOD,EAAEC,EAAEzB,WAAM,EAAQzD,gBAsB/B,SAASmF,IACP,IAAK,IAAIP,EAAO5E,UAAUsB,OAAQ8D,EAAc,IAAIN,MAAMF,GAAOzB,EAAO,EAAGA,EAAOyB,EAAMzB,IACtFiC,EAAYjC,GAAQnD,UAAUmD,GAGhC,OAAO,SAAUxD,GACf,OAAO,WACL,IAAI0F,EAAQ1F,EAAY8D,WAAM,EAAQzD,WAElCsF,EAAY,WACd,MAAM,IAAIrF,MAAM,2HAGdsF,EAAgB,CAClB7E,SAAU2E,EAAM3E,SAChBQ,SAAU,WACR,OAAOoE,EAAU7B,WAAM,EAAQzD,aAG/BwF,EAAQJ,EAAYK,KAAI,SAAUC,GACpC,OAAOA,EAAWH,MAGpB,OAAOjB,EAAe,GAAIe,EAAO,CAC/BnE,SAFFoE,EAAYX,EAAQlB,WAAM,EAAQ+B,EAAtBb,CAA6BU,EAAMnE,gB,6BCjoBrD,IAAIyD,EAAU,EAAQ,GAASA,QAE/BvI,EAAQ4B,YAAa,EACrB5B,EAAQuJ,oBACY,oBAAXnJ,QAA0BA,OAAOoJ,qCACtCpJ,OAAOoJ,qCACP,WACE,GAAyB,IAArB5F,UAAUsB,OACd,MAA4B,iBAAjBtB,UAAU,GAAwB2E,EACtCA,EAAQlB,MAAM,KAAMzD,YAIjC5D,EAAQyJ,iBACY,oBAAXrJ,QAA0BA,OAAOsJ,6BACtCtJ,OAAOsJ,6BACP,WAAa,OAAO,SAASC,GAAQ,OAAOA,K,8BClBhD,kBAGI7J,EAHJ,OAMEA,EADkB,oBAAT8J,KACFA,KACoB,oBAAXxJ,OACTA,YACoB,IAAXyJ,EACTA,EAEA5J,EAKT,IAAI6J,EAAS,YAAShK,GACP,Q,sDClBA,SAASiK,EAAyBjK,GAChD,IAAIgK,EACAvI,EAASzB,EAAKyB,OAalB,MAXsB,mBAAXA,EACNA,EAAO8D,WACVyE,EAASvI,EAAO8D,YAEhByE,EAASvI,EAAO,cAChBA,EAAO8D,WAAayE,GAGrBA,EAAS,eAGHA,EAfR,mC,wECAA,IAAIE,EAGJA,EAAI,WACH,OAAOnE,KADJ,GAIJ,IAECmE,EAAIA,GAAK,IAAIC,SAAS,cAAb,GACR,MAAOvD,GAEc,iBAAXtG,SAAqB4J,EAAI5J,QAOrCH,EAAOD,QAAUgK,G,cCnBjB/J,EAAOD,QAAU,SAASkK,GACzB,IAAKA,EAAeC,gBAAiB,CACpC,IAAIlK,EAASiB,OAAOY,OAAOoI,GAEtBjK,EAAOmK,WAAUnK,EAAOmK,SAAW,IACxClJ,OAAOC,eAAelB,EAAQ,SAAU,CACvCmB,YAAY,EACZC,IAAK,WACJ,OAAOpB,EAAOQ,KAGhBS,OAAOC,eAAelB,EAAQ,KAAM,CACnCmB,YAAY,EACZC,IAAK,WACJ,OAAOpB,EAAOO,KAGhBU,OAAOC,eAAelB,EAAQ,UAAW,CACxCmB,YAAY,IAEbnB,EAAOkK,gBAAkB,EAE1B,OAAOlK,I,+2DCtBR,SAASoK,EAAsBC,GAC7B,OAAO,SAAUhF,GACf,IAAIR,EAAWQ,EAAKR,SAChBR,EAAWgB,EAAKhB,SACpB,OAAO,SAAUqB,GACf,OAAO,SAAUZ,GACf,MAAsB,mBAAXA,EACFA,EAAOD,EAAUR,EAAUgG,GAG7B3E,EAAKZ,MAMpB,IAAIwF,EAAQF,IACZE,EAAMC,kBAAoBH,EAEX,Q,2UCnBR,IAAMI,EAAb,4EACaC,GAMT,IALA,IAAIC,EAAMD,EAAKC,eAAejC,MAC1BkC,UAAUF,EAAKC,IAAI,IACnBC,UAAUF,EAAKC,KAEfE,EAAOC,UAAUH,GACdE,IAASF,GACdA,EAAME,EACNA,EAAOC,UAAUH,GAEnB,OAAOC,UAAUC,OAXrB,KAeaE,EAAb,iFACkBC,GAGd,IAFA,IAAM9F,EAAS8F,EAAW9F,OACpB+F,EAAM,GACHzK,EAAI,EAAGA,EAAI0E,EAAQ1E,IAC1ByK,EAAIvG,KAAK,CACPsG,EAAWE,MAAM1K,GACjBwK,EAAWG,IAAI3K,KAGnB,OAAOyK,MAVX,KAcO,SAASG,EAAWhI,GACzB,OAAOiI,KAAKC,MAAMD,KAAKE,UAAUnI,IC9B5B,IAAMoI,EAAa,aACbC,EAAY,YAElB,SAASC,EAAWC,GACzB,MAAO,CACL3G,KAAMwG,EACNI,QAASD,GAIN,SAASE,EAAUC,GACxB,MAAO,CACL9G,KAAMyG,EACNG,QAASE,GCbN,IAAMC,EAAQ,QACRC,EAAO,OACPC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAY,YACZC,EAAW,WACXC,EAAc,cAEpB,SAASC,IACd,MAAO,CACLvH,KAAM+G,GAIH,SAASS,IACd,MAAO,CACLxH,KAAMgH,GAIH,SAASS,EAAgBC,GAC9B,MAAO,CACL1H,KAAMiH,EACNL,QAASc,GAIN,SAASC,EAAcD,GAC5B,MAAO,CACL1H,KAAMkH,EACNN,QAASc,GAIN,SAASE,EAAiBC,GAC/B,MAAO,CACL7H,KAAMmH,EACNP,QAASiB,GAIN,SAASC,EAAUC,GACxB,MAAO,CACL/H,KAAMoH,EACNR,QAASmB,GAIN,SAASC,IACd,MAAO,CACLhI,KAAMqH,GAIH,SAASY,EAAYvC,GAC1B,MAAO,CACL1F,KAAMsH,EACNV,QAASlB,GC1DN,IAAMwC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAqB,qBACrBC,EAAa,CACxBH,EACAE,EACAD,G,u5CCHK,IAAMG,EAAe,eACfC,EAAiB,iBAE9B,SAASC,EAASC,GAChB,IAAMC,EAAW,EAAID,GAErB,OADAC,EAASC,MAAK,kBAAOlL,KAAKC,SAAW,MAC9BgL,EAGT,SAASE,EAAMH,GACb,IAAMI,EAAU,EAAIJ,GACd5E,EAAIgF,EAAQ,GAGlB,OAFAA,EAAQ,GAAKA,EAAQA,EAAQ3I,OAAS,GACtC2I,EAAQA,EAAQ3I,OAAS,GAAK2D,EACvBgF,EAGT,SAASC,EAAyBlC,GAChC,MAAO,CACL5G,KAAMsI,EACN1B,WAIJ,SAASmC,EAAaC,EAAatD,GACjC,IAAKA,EAAM,OAAOsD,EAClB,IAAMC,EAAiB,EAAID,GACrBE,EAAeF,EAAYpJ,QAAQ8F,GAKzC,OAJsB,IAAlBwD,GACFD,EAAepJ,OAAOqJ,EAAc,GAEtCD,EAAeE,QAAQzD,GAChBuD,EAGF,SAASG,EAAcC,GAC5B,OAAO,SAACvJ,EAAUR,GAAa,IACrBgK,EAAahK,IAAbgK,SACFC,EAAmB,EAAH,KACjBD,GADiB,IAEpBD,cAEF,GAAIA,IAAcjB,EAAoB,CACpC,IAAMoB,EAAehB,EAAQc,EAASG,aAChCC,EAAyBF,EAAa5J,QAAQ0J,EAASK,SAC7DJ,EAAiBC,aAAeA,EAChCD,EAAiBG,uBAAyBA,EAE5C5J,EAASgJ,EAAwBS,KAI9B,SAASK,KACd,OAAO,SAAC9J,EAAUR,GAAa,IAEvBuK,EADevK,IAAbgK,SAC0BD,UAC5BS,EAAwBzB,EAAWzI,QAAQiK,GAC3CE,EAAqBD,EAAwB,GAAKzB,EAAWnI,OAAS,EAAI4J,EAAwB,EAExGV,EADsBf,EAAW0B,GACjCX,CAA4BtJ,EAAUR,IAInC,SAASqB,KACd,OAAO,SAACb,EAAUR,GAAa,IACrBgK,EAAahK,IAAbgK,SACFC,EAAmB,EAAH,GAAQD,GAC9B,GAAIA,EAASG,YAAYvJ,OAAQ,CAC/B,GAAIoJ,EAASD,YAAcjB,EAAoB,CAC7C,GAAIkB,EAASI,uBAAyB,IAAMJ,EAASE,aAAatJ,OAAQ,OACpE8J,EAAkBxB,EAAQc,EAASG,aACnCO,EAAgB,KAAOV,EAASE,aAAaF,EAASE,aAAatJ,OAAS,KAC9E8J,EAAkBpB,EAAKoB,KAEzB,EAAAT,EAAiBC,cAAa9J,KAA9B,UAAsCsK,IAExCT,EAAiBG,yBACjBH,EAAiBI,QAAUJ,EAAiBC,aAAaD,EAAiBG,wBAC1EH,EAAiBU,sBAAwBX,EAASG,YAAY7J,QAAQ2J,EAAiBI,cAEnFL,EAASW,sBAAwB,GAAKX,EAASG,YAAYvJ,OAC7DqJ,EAAiBU,sBAAwB,EAEzCV,EAAiBU,wBAEnBV,EAAiBI,QAAUJ,EAAiBE,YAAYF,EAAiBU,uBAE3EV,EAAiBP,YAAcD,EAAYO,EAASN,YAAaO,EAAiBI,SAEpF7J,EAASgJ,EAAwBS,KAI9B,SAASW,KACd,OAAO,SAACpK,EAAUR,GAAa,IACrBgK,EAAahK,IAAbgK,SACJA,EAASD,YAAclB,EACzBrI,EAASgJ,EAAwBQ,IAEjC3I,KAAOb,EAAUR,IAKhB,SAAS6K,KACd,OAAO,SAACrK,EAAUR,GAAa,IACrBgK,EAAahK,IAAbgK,SACFC,EAAmB,EAAH,GAAQD,GAC9B,GAAIA,EAASG,YAAYvJ,OAAQ,CAC/B,GAAIoJ,EAASD,YAAcjB,EAAoB,CAC7C,GAAIkB,EAASI,uBAAyB,IAAO,EAAG,OAC1CM,EAAkBxB,EAAQc,EAASG,aACnCO,EAAgBA,EAAgB9J,OAAS,KAAOoJ,EAASE,aAAa,KACxEQ,EAAkBpB,EAAKoB,KAEzB,EAAAT,EAAiBC,cAAaL,QAA9B,UAAyCa,IACzCT,EAAiBG,wBAA0BM,EAAgB9J,OAE7DqJ,EAAiBG,yBACjBH,EAAiBI,QAAUJ,EAAiBC,aAAaD,EAAiBG,wBAC1EH,EAAiBU,sBAAwBX,EAASG,YAAY7J,QAAQ2J,EAAiBI,cAEnFL,EAASW,sBAAwB,IAAO,EAC1CV,EAAiBU,sBAAwBX,EAASG,YAAYvJ,OAAS,EAEvEqJ,EAAiBU,wBAEnBV,EAAiBI,QAAUJ,EAAiBE,YAAYF,EAAiBU,uBAE3EV,EAAiBP,YAAcD,EAAYO,EAASN,YAAaO,EAAiBI,SAEpF7J,EAASgJ,EAAwBS,KAI9B,SAASa,GAAgB1E,GAC9B,OAAO,SAAC5F,EAAUR,GAAa,IAGzB+K,EAFIf,EAAahK,IAAbgK,SACFC,EAAmB,EAAH,GAAQD,GAEV,iBAAT5D,EACT2E,EAASf,EAASG,YAAY/D,GACL,iBAATA,EAChB2E,EAAS3E,GAET2E,EAAS5E,EAAK6E,GAAG5E,GACjB6D,EAAiBgB,MAAMF,GAAU3E,GACa,IAA1C4D,EAASG,YAAY7J,QAAQyK,IAC/Bd,EAAiBE,YAAY5J,OAC3B0J,EAAiBU,sBAAwB,EAAG,EAAGI,IAIrDd,EAAiBI,QAAUU,EAC3Bd,EAAiBU,sBAAwBX,EAASG,YAAY7J,QAAQyK,GAClEf,EAASD,YAAcjB,IACzBmB,EAAiBC,aAAehB,EAAQe,EAAiBE,aACzDF,EAAiBG,uBAAyBH,EAAiBC,aAAa5J,QAAQyK,IAElFd,EAAiBP,YAAcD,EAAYO,EAASN,YAAaO,EAAiBI,SAClF7J,EAASgJ,EAAwBS,KAI9B,SAASiB,GAAa9E,GAC3B,OAAO,SAAC5F,EAAUR,GAAa,IAGzB+K,EAFIf,EAAahK,IAAbgK,SACFC,EAAmB,EAAH,GAAQD,GAU9B,GARoB,iBAAT5D,EACT2E,EAASf,EAASG,YAAY/D,GACL,iBAATA,EAChB2E,EAAS3E,GAET2E,EAAS5E,EAAK6E,GAAG5E,GACjB6D,EAAiBgB,MAAMF,GAAU3E,GAE/B2E,IAAWf,EAASK,QAAS,CAC/B,GAAIL,EAASD,YAAcjB,EAAoB,CAC7C,IAAMqC,EAAwBnB,EAASG,YAAYpK,MAAM,EAAGiK,EAASW,uBAClElH,QAAO,SAAA2H,GAAI,OAAIA,IAASL,KAAQnK,OACnCqJ,EAAiBE,YAAcH,EAASG,YAAY1G,QAAO,SAAA2H,GAAI,OAAIA,IAASL,KAC5Ed,EAAiBU,uBAAyBQ,EAC1ClB,EAAiBE,YAAY5J,OAC3B0J,EAAiBU,sBAAwB,EAAG,EAAGI,QAExCf,EAASD,YAAcjB,GAC9BkB,EAASI,uBAAyB,EAAIJ,EAASE,aAAatJ,QAC5DoJ,EAASE,aAAaF,EAASI,uBAAyB,KAAOW,GAGjEd,EAAiBC,aAAa3J,OAAOyJ,EAASI,uBAAyB,EAAG,EAAGW,GAEnC,IAAxCd,EAAiBE,YAAYvJ,SAC/BqJ,EAAiBI,QAAUJ,EAAiBE,YAAY,IAG5D3J,EAASgJ,EAAwBS,KAI9B,SAASoB,GAAYjF,GAC1B,OAAO,SAAC5F,EAAUR,GAAa,IAGzB+K,EAFIf,EAAahK,IAAbgK,SACFC,EAAmB,EAAH,GAAQD,GAG5Be,EADkB,iBAAT3E,EACA4D,EAASG,YAAY/D,GACL,iBAATA,EACPA,EAEAD,EAAK6E,GAAG5E,GAEnB,IAAM+E,EAAwBnB,EAASG,YAAYpK,MAAM,EAAGiK,EAASW,uBAClElH,QAAO,SAAA2H,GAAI,OAAIA,IAASL,KAAQnK,OAEnC,GADAqJ,EAAiBE,YAAcH,EAASG,YAAY1G,QAAO,SAAA2H,GAAI,OAAIA,IAASL,KACxEf,EAASD,YAAcjB,EAAoB,CAC7C,IAAMwC,EAAyBtB,EAASE,aAAanK,MAAM,EAAGiK,EAASI,wBACpE3G,QAAO,SAAA2H,GAAI,OAAIA,IAASL,KAAQnK,OACnCqJ,EAAiBC,aAAeF,EAASE,aAAazG,QAAO,SAAA2H,GAAI,OAAIA,IAASL,KAC9Ed,EAAiBG,wBAA0BkB,EACvCrB,EAAiBG,wBAA0BH,EAAiBC,aAAatJ,SAC3EqJ,EAAiBG,uBAAyBH,EAAiBC,aAAatJ,OAAS,EAAI,EACjFqJ,EAAiBC,aAAatJ,OAAS,EAAI,GAEjDqJ,EAAiBU,sBAAwBV,EAAiBC,aAAatJ,OAAS,EAAI,EAChFqJ,EAAiBE,YAAY7J,QAC7B2J,EAAiBC,aAAaD,EAAiBG,yBAC7C,OAENH,EAAiBU,uBAAyBQ,EACtClB,EAAiBU,uBAAyBV,EAAiBE,YAAYvJ,SACzEqJ,EAAiBU,sBAAwBV,EAAiBE,YAAYvJ,OAAS,EAAI,EAC/EqJ,EAAiBE,YAAYvJ,OAAS,EAAI,GAGlDqJ,EAAiBI,QAAUJ,EAAiBE,YAAYvJ,OACpDqJ,EAAiBE,YAAYF,EAAiBU,uBAAyB,KAC3EV,EAAiBP,YAAcD,EAAYO,EAASN,YAAaO,EAAiBI,SAClF7J,EAASgJ,EAAwBS,KAI9B,SAASsB,GAAaN,EAAOO,EAAazB,GAC/C,OAAO,SAACvJ,EAAUR,GAAa,MACrBgK,EAAahK,IAAbgK,SACFC,EAAmB,EAAH,KACjBD,GADiB,IAEpBiB,MAAO,GACPd,YAAa,GACbQ,sBAAuB,KACvBT,aAAc,GACdE,uBAAwB,KACxBC,QAAS,KACTN,UAAWA,GAAaC,EAASD,YAVN,E,6nBAAA,CAYVkB,GAZU,IAY7B,2BAA0B,KAAf7E,EAAe,QAClB2E,EAAS5E,EAAK6E,GAAG5E,GACvB6D,EAAiBgB,MAAMF,GAAU3E,EACjC6D,EAAiBE,YAAY/J,KAAK2K,IAfP,8BAiB7B,GAAId,EAAiBE,YAAYvJ,OAAQ,CACvC,IAAImK,EACAU,GAAmB,EACI,iBAAhBD,GACTT,EAASd,EAAiBE,YAAYqB,GACtCC,GAAmB,GACa,iBAAhBD,GAChBT,EAASS,EACTC,GAAmB,GACVD,IACTT,EAAS5E,EAAK6E,GAAGQ,GACjBC,GAAmB,GAEjBA,GACFxB,EAAiBU,sBAAwBV,EAAiBE,YAAY7J,QAAQyK,GAC1Ed,EAAiBF,YAAcjB,IACjCmB,EAAiBC,aAAehB,EAAQe,EAAiBE,aACzDF,EAAiBG,uBAAyBH,EAAiBC,aAAa5J,QAAQyK,IAElFd,EAAiBI,QAAUU,GAEvBd,EAAiBF,YAAcjB,GACjCmB,EAAiBC,aAAehB,EAAQe,EAAiBE,aACzDF,EAAiBG,uBAAyB,EAC1CH,EAAiBI,QAAUJ,EAAiBC,aAAaD,EAAiBG,wBAC1EH,EAAiBU,sBAAwBV,EAAiBE,YAAY7J,QAAQ2J,EAAiBI,WAE/FJ,EAAiBU,sBAAwB,EACzCV,EAAiBI,QAAUJ,EAAiBE,YAAYF,EAAiBU,wBAG7EV,EAAiBP,YAAcD,EAAYO,EAASN,YAAaO,EAAiBI,SAEpF7J,EAASgJ,EAAwBS,KAI9B,SAASyB,KACd,MAAO,CACLhL,KAAMuI,G,6rBC7SV,IAAM0C,GAAe,CACnBtE,OAAQ,EACRuE,MAAO,G,6rBCAT,IAAMD,GAAe,CACnBV,MAAO,GACPd,YAAa,GACbQ,sBAAuB,KACvBT,aAAc,GACdE,uBAAwB,KACxBV,YAAa,GACbW,QAAS,KACTN,UAAWnB,G,6rBCAb,IAAM+C,GAAe,CACnBtF,IAAK,GACLwF,SAAU,EACVzF,KAAM,KACN0F,YAAa,EACbC,UAAW,EACXC,aAAc,KACdC,QAAQ,GCZKtK,6BAAgB,CAC7BuK,OHDa,WAAwC,IAA9B7J,EAA8B,uDAAtBsJ,GAAclL,EAAQ,uCACrD,OAAQA,EAAOC,MACb,KAAKwG,EACH,gBACK7E,GADL,IAEEgF,OAAQ5G,EAAO6G,UAEnB,KAAKH,EACH,gBACK9E,GADL,IAEEuJ,MAAOnL,EAAO6G,UAElB,QACE,OAAOjF,IGXXgI,QDea,WAAwC,IAA9BhI,EAA8B,uDAAtBsJ,GAAclL,EAAQ,uCACrD,OAAQA,EAAOC,MACb,KAAKuI,EACH,OAAOnC,EAAU6E,IACnB,KAAK3C,EACH,gBACK3G,GADL,IAEE+D,KAAM3F,EAAO6G,QAAQ+C,QACjBvD,EAAUrG,EAAO6G,QAAQ2D,MAAMxK,EAAO6G,QAAQ+C,UAAY,KAC9DhE,IAAK5F,EAAO6G,QAAQ+C,QAChB5J,EAAO6G,QAAQ2D,MAAMxK,EAAO6G,QAAQ+C,SAAShE,eAAejC,MAC1D3D,EAAO6G,QAAQ2D,MAAMxK,EAAO6G,QAAQ+C,SAAShE,IAAI,GACjD5F,EAAO6G,QAAQ2D,MAAMxK,EAAO6G,QAAQ+C,SAAShE,IAC/C,GACJwF,SAAU,IAEd,KAAK7D,EACH,gBACK3F,GADL,IAEE+D,KAAM/D,EAAM+D,KACRD,EAAK6E,GAAG3I,EAAM+D,QAAUD,EAAK6E,GAAGvK,EAAO6G,SACrCR,EAAUrG,EAAO6G,SAAWR,EAAUzE,EAAM+D,MAC9C,OAER,KAAK2B,EACH,IAAMoE,EAAQ9J,EAAMwJ,SAAW,EAC/B,gBACK/E,EAAUzE,IADf,IAEEwJ,SAAUM,EACV9F,IAAKhE,EAAM+D,KAAKC,IAAI8F,KAGxB,KAAKxE,EACH,gBACKb,EAAUzE,IADf,IAEEyJ,YAAarL,EAAO6G,UAExB,KAAKM,EACH,gBACKd,EAAUzE,IADf,IAEE0J,UAAWtL,EAAO6G,UAEtB,KAAKO,EACH,gBACKf,EAAUzE,IADf,IAEE2J,aAAclF,EAAUrG,EAAO6G,WAEnC,KAAKQ,EACH,gBACKhB,EAAUzE,IADf,IAEEyJ,YAAarL,EAAO6G,QAAQwE,YAC5BC,UAAWtL,EAAO6G,QAAQyE,UAC1BC,aAAclF,EAAUrG,EAAO6G,QAAQ0E,gBAE3C,KAAKvE,EACH,gBACKX,EAAUzE,IADf,IAEE4J,QAAQ,IAEZ,KAAKvE,EACH,gBACKZ,EAAUzE,IADf,IAEE4J,QAAQ,IAEZ,QACE,OAAO5J,IC/EX2H,SFKa,WAAwC,IAA9B3H,EAA8B,uDAAtBsJ,GAAclL,EAAQ,uCACrD,OAAQA,EAAOC,MACb,KAAKsI,EACH,OAAOlC,EAAUrG,EAAO6G,SAC1B,KAAKU,EACH,IAAMoE,EAAUtF,EAAUrG,EAAO6G,SAC3B+E,EAAWvF,EAAUzE,EAAM4I,OAEjC,OADAoB,EAASlG,EAAK6E,GAAGoB,IAAYA,EAC7B,SACKtF,EAAUzE,IADf,IAEE4I,MAAOoB,IAGX,KAAKpD,EACH,gBACKnC,EAAU6E,KADf,IAEE5B,UAAW1H,EAAM0H,YAErB,QACE,OAAO1H,M,wvCGfN,IAAMiK,GAAb,WAyBE,WAAaC,GAAiB,IDxBxBC,ECwBwB,Q,4FAAA,SAC5BjL,KAAKkL,OAASF,EACVtN,sBAAY2C,KD1BZ4K,EAAgB1F,EC0BgByF,IDzBxBlC,QAAUqC,GACxBF,EAAcnC,QAAQjE,KAAOoG,EAAcxC,SAASK,QAChDmC,EAAcxC,SAASiB,MAAMuB,EAAcxC,SAASK,SAAW,KACnEmC,EAAcnC,QAAQhE,IAAMmG,EAAcnC,QAAQjE,KAC9CoG,EAAcnC,QAAQjE,KAAKC,eAAejC,MACxCoI,EAAcnC,QAAQjE,KAAKC,IAAI,GAC/BmG,EAAcnC,QAAQjE,KAAKC,IAC7B,KACGmG,GCiBiDvH,8BAAoBR,0BAAgBwB,KACtFhH,sBAAY2C,GAAUqD,8BAAoBR,0BAAgBwB,KAE9D1E,KAAKP,KAAO,IAAIlF,OAAO6Q,MAEvBpL,KAAKP,KAAK4L,iBAAiB,WAAW,WACpC,EAAKhI,UAAU0D,EAAgB7B,EAAWoG,QAAQ,EAAK7L,KAAKuH,eAE9DhH,KAAKP,KAAK4L,iBAAiB,kBAAkB,WAC3C,EAAKhI,UAAU0D,EAAgB7B,EAAWoG,QAAQ,EAAK7L,KAAKuH,eAE9DhH,KAAKP,KAAK4L,iBAAiB,kBAAkB,WAC3C,EAAKhI,UAAUyD,EAAa,EAAKrH,KAAK8L,cAExCvL,KAAKP,KAAK4L,iBAAiB,SAAS,WAClC,EAAKhI,UAAUgG,MACf,EAAKmC,wBACL,EAAKC,kBAEPzL,KAAKP,KAAK4L,iBAAiB,SAAS,WAClC,IAAMvK,EAAQ,EAAKrC,WACQ,OAAvBqC,EAAMgI,QAAQjE,OACd/D,EAAMgI,QAAQjE,KAAKC,eAAejC,OACpC/B,EAAMgI,QAAQwB,SAAW,EAAIxJ,EAAMgI,QAAQjE,KAAKC,IAAIzF,OACpD,EAAKgE,UAAU8D,KAEf,EAAK9D,UAAUgG,MAEjB,EAAKmC,wBACA1K,EAAMgI,QAAQ4B,QAAQ,EAAKe,mBAElCzL,KAAKP,KAAK4L,iBAAiB,kBAAkB,WAC3C,EAAKhI,UAAUyD,EAAa,EAAKrH,KAAK8L,cAExCvL,KAAKP,KAAK4L,iBAAiB,SAAS,WAClC,EAAKhI,UAAUqD,QAEjB1G,KAAKP,KAAK4L,iBAAiB,QAAQ,WACjC,EAAKhI,UAAUsD,QAEjB3G,KAAKP,KAAK4L,iBAAiB,YAAY,WACrC,EAAKhI,UAAU0D,EAAgB7B,EAAWoG,QAAQ,EAAK7L,KAAKuH,eAE9DhH,KAAKP,KAAK4L,iBAAiB,cAAc,WACvC,EAAKhI,UAAU2C,EAAS,EAAKvG,KAAKiM,kBAEpC1L,KAAKP,KAAK4L,iBAAiB,cAAc,WACvC,EAAKhI,UAAU4D,EAAS,CACtBsD,YAAa,EAAK9K,KAAK8K,YACvBC,UAAW,EAAK/K,KAAK8L,SACrBd,aAAcvF,EAAWoG,QAAQ,EAAK7L,KAAKuH,gBAG/ChH,KAAKP,KAAK4L,iBAAiB,gBAAgB,WACrC,EAAK5L,KAAKkM,MAAO,EAAKtI,UAAUwC,EAAU,IACzC,EAAKxC,UAAUwC,EAAU,EAAKpG,KAAKqG,YAG1C9F,KAAK4L,WAAa,GArFtB,uCAEI,OAAO5L,KAAKP,OAFhB,4BAMI,OAAOO,KAAKkL,SANhB,gCAUI,OAAOlL,KAAKkL,OAAOjM,WAVvB,+BAcI,OAAOe,KAAKkL,OAAOzM,WAdvB,gCAkBI,OAAOuB,KAAK6L,aAAc,IAlB9B,8BAsBI,OAAOC,QAtBX,sCAyFI9L,KAAK6L,YAAa,EADT,WAEU7L,KAAK4L,YAFf,IAET,2BAAoC,SAC7BG,SAHE,8BAKT/L,KAAK4L,WAAa,GAClB5L,KAAKgM,UACLhM,KAAKP,KAAKwM,gBAAgB,OAC1BjM,KAAKP,KAAKyM,SAhGd,gCAmGavN,GAAU,WACbvD,EAAI4E,KAAK4L,WAAWO,MAAK,SAAAtC,GAAI,OAAIA,EAAKlL,WAAaA,KACzD,GAAIvD,EACF,OAAOA,EAAE2Q,MAEX,IAAMA,EAAQ/L,KAAKkL,OAAOxM,WAAU,kBAAMC,EAAS,EAAKF,eAKxD,OAJAuB,KAAK4L,WAAW/M,KAAK,CACnBF,WACAoN,UAEKA,IA7GX,kCAgHepN,GACX,IAAMvD,EAAI4E,KAAK4L,WAAWO,MAAK,SAAAtC,GAAI,OAAIA,EAAKlL,WAAaA,KACrDvD,IACFA,EAAE2Q,QACF/L,KAAK4L,WAAa5L,KAAK4L,WAAW1J,QAAO,SAAA2H,GAAI,OAAIA,EAAKlL,WAAaA,QApHzE,kCAyHI,OD/HuBmC,EC+HNd,KAAKvB,kBD9HlB2N,EAAgB7G,EAAUzE,IACXgI,QACdsD,EAHF,IAAoBtL,EACnBsL,ICKR,4BA4HSC,EAAY5C,IACS,iBAAf4C,GAA2B5C,KACpCzJ,KAAKP,KAAKgK,GAA2B,iBAAf4C,EAClBA,EAAa5C,IAEJ4C,aAAsB9R,OAAO+R,YACxCD,EAAaE,SAASC,MACnBC,YAAYzM,KAAKP,QAnI5B,gCAuIIO,KAAKP,KAAKiN,WAvId,8CA2II,IAAM5L,EAAQd,KAAKvB,WACfmG,EAAK6E,GAAG3I,EAAMgI,WAAalE,EAAK6E,GAAGzJ,KAAKP,QACtCqB,EAAMgI,QAAQhE,IAAK9E,KAAKP,KAAKqF,IAAMhE,EAAMgI,QAAQhE,KAEnD9E,KAAKP,KAAKwM,gBAAgB,OAC1BjM,KAAKP,KAAKyM,WAhJlB,qCAsJIlM,KAAKP,KAAK8K,YAAc,EACxBvK,KAAKP,KAAKkH,SAvJd,8BA2JI3G,KAAKP,KAAKiH,UA3Jd,6BA+JI1G,KAAKP,KAAKkH,SA/Jd,mCAmKkB3G,KAAKvB,WACTqK,QAAQ4B,OAChB1K,KAAKP,KAAKkH,OACL3G,KAAKP,KAAKiH,UAtKrB,qCAyKkBG,GACd7G,KAAKP,KAAK8K,YAAc1D,EACxB7G,KAAKqD,UAAUuD,EAAeC,MA3KlC,6BA+KI7G,KAAKqD,UAAUvD,MACfE,KAAKwL,wBACLxL,KAAKyL,iBAjLT,iCAqLIzL,KAAKqD,UAAUiG,MACftJ,KAAKwL,wBACLxL,KAAKyL,iBAvLT,mCA0LgBjD,GACZxI,KAAKqD,UAAUkF,EAAaC,MA3LhC,sCA+LIxI,KAAKqD,UAAU0F,QA/LnB,qCAkMkBlE,GACd7E,KAAKqD,UAAUkG,GAAe1E,IAC9B7E,KAAKwL,wBACLxL,KAAKyL,iBArMT,kCAwMe5G,GACX7E,KAAKqD,UAAUsG,GAAY9E,IAC3B7E,KAAKwL,0BA1MT,iCA6Mc3G,GACV7E,KAAKqD,UAAUyG,GAAWjF,IAC1B7E,KAAKwL,0BA/MT,kCAkNe9B,EAAOO,EAAazB,GAC/BxI,KAAKqD,UAAU2G,GAAYN,EAAOO,EAAazB,IAC/CxI,KAAKwL,0BApNT,sCAwNIxL,KAAKqD,UAAU8G,MACfnK,KAAKwL,0BAzNT,iCA4Nc3G,GACV7E,KAAKqD,UAAU+D,EAAWvC,MA7N9B,gCAgOaiB,GACT9F,KAAKqD,UAAUwC,EAAUC,IACzB9F,KAAKP,KAAKqG,OAASA,IAlOvB,+BAqOYG,GACRjG,KAAKqD,UAAU2C,EAASC,IACxBjG,KAAKP,KAAKiM,aAAezF,MAvO7B,KA2Oe8E,gB","file":"kokoro.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Kokoro\"] = factory();\n\telse\n\t\troot[\"Kokoro\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","\"use strict\";\n\nvar compose = require('redux').compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :\n    function() {\n      if (arguments.length === 0) return undefined;\n      if (typeof arguments[0] === 'object') return compose;\n      return compose.apply(null, arguments);\n    }\n);\n\nexports.devToolsEnhancer = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION__ :\n    function() { return function(noop) { return noop; } }\n);\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","function createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\nexport default thunk;","export class Song {\n  static id (song) {\n    let src = song.src instanceof Array\n      ? encodeURI(song.src[0])\n      : encodeURI(song.src)\n\n    let good = decodeURI(src)\n    while (good !== src) {\n      src = good\n      good = decodeURI(src)\n    }\n    return encodeURI(good)\n  }\n}\n\nexport class TimeRanges {\n  static toArray (timeRanges) {\n    const length = timeRanges.length\n    const arr = []\n    for (let i = 0; i < length; i++) {\n      arr.push([\n        timeRanges.start(i),\n        timeRanges.end(i)\n      ])\n    }\n    return arr\n  }\n}\n\nexport function cloneDeep (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n","export const SET_VOLUME = 'SET_VOLUME'\nexport const SET_SPEED = 'SET_SPEED'\n\nexport function setVolume (volume) {\n  return {\n    type: SET_VOLUME,\n    payload: volume\n  }\n}\n\nexport function setSpeed (speedRate) {\n  return {\n    type: SET_SPEED,\n    payload: speedRate\n  }\n}\n","export const PAUSE = 'PAUSE'\nexport const PLAY = 'PLAY'\nexport const SET_CURRENT_TIME = 'SET_CURRENT_TIME'\nexport const SET_TOTAL_TIME = 'SET_TOTAL_TIME'\nexport const SET_BUFFERED_TIME = 'SET_BUFFERED_TIME'\nexport const SET_TIMES = 'SET_TIMES'\nexport const NEXT_SRC = 'NEXT_SRC'\nexport const UPDATE_SONG = 'UPDATE_SONG'\n\nexport function pause () {\n  return {\n    type: PAUSE\n  }\n}\n\nexport function play () {\n  return {\n    type: PLAY\n  }\n}\n\nexport function setCurrentTime (time) {\n  return {\n    type: SET_CURRENT_TIME,\n    payload: time\n  }\n}\n\nexport function setTotalTime (time) {\n  return {\n    type: SET_TOTAL_TIME,\n    payload: time\n  }\n}\n\nexport function setBufferedTime (buffered) {\n  return {\n    type: SET_BUFFERED_TIME,\n    payload: buffered\n  }\n}\n\nexport function setTimes (times) {\n  return {\n    type: SET_TIMES,\n    payload: times\n  }\n}\n\nexport function nextSrc () {\n  return {\n    type: NEXT_SRC\n  }\n}\n\nexport function updateSong (song) {\n  return {\n    type: UPDATE_SONG,\n    payload: song\n  }\n}\n","export const PLAY_ORDER_LOOP = 'PLAY_ORDER_LOOP'\nexport const PLAY_ORDER_SINGLE = 'PLAY_ORDER_SINGLE'\nexport const PLAY_ORDER_SHUFFLE = 'PLAY_ORDER_SHUFFLE'\nexport const PLAY_ORDER = [\n  PLAY_ORDER_LOOP,\n  PLAY_ORDER_SHUFFLE,\n  PLAY_ORDER_SINGLE\n]\n","import { PLAY_ORDER, PLAY_ORDER_SHUFFLE, PLAY_ORDER_SINGLE } from '../constants'\nimport { Song } from '../helpers'\n\nexport const SET_PLAYLIST = 'SET_PLAYLIST'\nexport const CLEAR_PLAYLIST = 'CLEAR_PLAYLIST'\n\nfunction shuffle (original) {\n  const shuffled = [...original]\n  shuffled.sort(() => (Math.random() - 0.5))\n  return shuffled\n}\n\nfunction swap (original) {\n  const swapped = [...original]\n  const a = swapped[0]\n  swapped[0] = swapped[swapped.length - 1]\n  swapped[swapped.length - 1] = a\n  return swapped\n}\n\nfunction createSetPlaylistAction (payload) {\n  return {\n    type: SET_PLAYLIST,\n    payload\n  }\n}\n\nfunction pushHistory (historyList, song) {\n  if (!song) return historyList\n  const newHistoryList = [...historyList]\n  const historyIndex = historyList.indexOf(song)\n  if (historyIndex !== -1) {\n    newHistoryList.splice(historyIndex, 1)\n  }\n  newHistoryList.unshift(song)\n  return newHistoryList\n}\n\nexport function setPlayOrder (playOrder) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = {\n      ...playlist,\n      playOrder\n    }\n    if (playOrder === PLAY_ORDER_SHUFFLE) {\n      const shuffledList = shuffle(playlist.orderedList)\n      const shuffledIndexOfPlaying = shuffledList.indexOf(playlist.playing)\n      newPlaylistState.shuffledList = shuffledList\n      newPlaylistState.shuffledIndexOfPlaying = shuffledIndexOfPlaying\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function nextPlayOrder () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const currentPlayOrder = playlist.playOrder\n    const currentPlayOrderIndex = PLAY_ORDER.indexOf(currentPlayOrder)\n    const nextPlayOrderIndex = currentPlayOrderIndex + 1 >= PLAY_ORDER.length ? 0 : currentPlayOrderIndex + 1\n    const nextPlayOrder = PLAY_ORDER[nextPlayOrderIndex]\n    setPlayOrder(nextPlayOrder)(dispatch, getState)\n  }\n}\n\nexport function next () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    if (playlist.orderedList.length) {\n      if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n        if (playlist.shuffledIndexOfPlaying + 1 === playlist.shuffledList.length) {\n          let newShuffledList = shuffle(playlist.orderedList)\n          if (newShuffledList[0] === playlist.shuffledList[playlist.shuffledList.length - 1]) {\n            newShuffledList = swap(newShuffledList)\n          }\n          newPlaylistState.shuffledList.push(...newShuffledList)\n        }\n        newPlaylistState.shuffledIndexOfPlaying++\n        newPlaylistState.playing = newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n        newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.indexOf(newPlaylistState.playing)\n      } else {\n        if (playlist.orderedIndexOfPlaying + 1 >= playlist.orderedList.length) {\n          newPlaylistState.orderedIndexOfPlaying = 0\n        } else {\n          newPlaylistState.orderedIndexOfPlaying++\n        }\n        newPlaylistState.playing = newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying]\n      }\n      newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function autoNext () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    if (playlist.playOrder === PLAY_ORDER_SINGLE) {\n      dispatch(createSetPlaylistAction(playlist))\n    } else {\n      next()(dispatch, getState)\n    }\n  }\n}\n\nexport function previous () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    if (playlist.orderedList.length) {\n      if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n        if (playlist.shuffledIndexOfPlaying - 1 === -1) {\n          let newShuffledList = shuffle(playlist.orderedList)\n          if (newShuffledList[newShuffledList.length - 1] === playlist.shuffledList[0]) {\n            newShuffledList = swap(newShuffledList)\n          }\n          newPlaylistState.shuffledList.unshift(...newShuffledList)\n          newPlaylistState.shuffledIndexOfPlaying += newShuffledList.length\n        }\n        newPlaylistState.shuffledIndexOfPlaying--\n        newPlaylistState.playing = newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n        newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.indexOf(newPlaylistState.playing)\n      } else {\n        if (playlist.orderedIndexOfPlaying - 1 === -1) {\n          newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.length - 1\n        } else {\n          newPlaylistState.orderedIndexOfPlaying--\n        }\n        newPlaylistState.playing = newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying]\n      }\n      newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function setCurrentSong (song) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    let songId\n    if (typeof song === 'number') {\n      songId = playlist.orderedList[song]\n    } else if (typeof song === 'string') {\n      songId = song\n    } else {\n      songId = Song.id(song)\n      newPlaylistState.songs[songId] = song\n      if (playlist.orderedList.indexOf(songId) === -1) {\n        newPlaylistState.orderedList.splice(\n          newPlaylistState.orderedIndexOfPlaying + 1, 0, songId\n        )\n      }\n    }\n    newPlaylistState.playing = songId\n    newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.indexOf(songId)\n    if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n      newPlaylistState.shuffledList = shuffle(newPlaylistState.orderedList)\n      newPlaylistState.shuffledIndexOfPlaying = newPlaylistState.shuffledList.indexOf(songId)\n    }\n    newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function setNextSong (song) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    let songId\n    if (typeof song === 'number') {\n      songId = playlist.orderedList[song]\n    } else if (typeof song === 'string') {\n      songId = song\n    } else {\n      songId = Song.id(song)\n      newPlaylistState.songs[songId] = song\n    }\n    if (songId !== playlist.playing) {\n      if (playlist.playOrder !== PLAY_ORDER_SHUFFLE) {\n        const orderedIndexReduction = playlist.orderedList.slice(0, playlist.orderedIndexOfPlaying)\n          .filter(item => item === songId).length\n        newPlaylistState.orderedList = playlist.orderedList.filter(item => item !== songId)\n        newPlaylistState.orderedIndexOfPlaying -= orderedIndexReduction\n        newPlaylistState.orderedList.splice(\n          newPlaylistState.orderedIndexOfPlaying + 1, 0, songId\n        )\n      } else if (playlist.playOrder === PLAY_ORDER_SHUFFLE &&\n        !(playlist.shuffledIndexOfPlaying + 1 < playlist.shuffledList.length &&\n          playlist.shuffledList[playlist.shuffledIndexOfPlaying + 1] === songId\n        )\n      ) {\n        newPlaylistState.shuffledList.splice(playlist.shuffledIndexOfPlaying + 1, 0, songId)\n      }\n      if (newPlaylistState.orderedList.length === 1) {\n        newPlaylistState.playing = newPlaylistState.orderedList[0]\n      }\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function removeSong (song) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    let songId\n    if (typeof song === 'number') {\n      songId = playlist.orderedList[song]\n    } else if (typeof song === 'string') {\n      songId = song\n    } else {\n      songId = Song.id(song)\n    }\n    const orderedIndexReduction = playlist.orderedList.slice(0, playlist.orderedIndexOfPlaying)\n      .filter(item => item === songId).length\n    newPlaylistState.orderedList = playlist.orderedList.filter(item => item !== songId)\n    if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n      const shuffledIndexReduction = playlist.shuffledList.slice(0, playlist.shuffledIndexOfPlaying)\n        .filter(item => item === songId).length\n      newPlaylistState.shuffledList = playlist.shuffledList.filter(item => item !== songId)\n      newPlaylistState.shuffledIndexOfPlaying -= shuffledIndexReduction\n      if (newPlaylistState.shuffledIndexOfPlaying >= newPlaylistState.shuffledList.length) {\n        newPlaylistState.shuffledIndexOfPlaying = newPlaylistState.shuffledList.length - 1 > 0\n          ? newPlaylistState.shuffledList.length - 1 : 0\n      }\n      newPlaylistState.orderedIndexOfPlaying = newPlaylistState.shuffledList.length - 1 > 0\n        ? newPlaylistState.orderedList.indexOf(\n          newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n        ) : 0\n    } else {\n      newPlaylistState.orderedIndexOfPlaying -= orderedIndexReduction\n      if (newPlaylistState.orderedIndexOfPlaying >= newPlaylistState.orderedList.length) {\n        newPlaylistState.orderedIndexOfPlaying = newPlaylistState.orderedList.length - 1 > 0\n          ? newPlaylistState.orderedList.length - 1 : 0\n      }\n    }\n    newPlaylistState.playing = newPlaylistState.orderedList.length\n      ? newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying] : null\n    newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function setPlaylist (songs, currentSong, playOrder) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = {\n      ...playlist,\n      songs: {},\n      orderedList: [],\n      orderedIndexOfPlaying: null,\n      shuffledList: [],\n      shuffledIndexOfPlaying: null,\n      playing: null,\n      playOrder: playOrder || playlist.playOrder\n    }\n    for (const song of songs) {\n      const songId = Song.id(song)\n      newPlaylistState.songs[songId] = song\n      newPlaylistState.orderedList.push(songId)\n    }\n    if (newPlaylistState.orderedList.length) {\n      let songId\n      let currentSongValid = false\n      if (typeof currentSong === 'number') {\n        songId = newPlaylistState.orderedList[currentSong]\n        currentSongValid = true\n      } else if (typeof currentSong === 'string') {\n        songId = currentSong\n        currentSongValid = true\n      } else if (currentSong) {\n        songId = Song.id(currentSong)\n        currentSongValid = true\n      }\n      if (currentSongValid) {\n        newPlaylistState.orderedIndexOfPlaying = newPlaylistState.orderedList.indexOf(songId)\n        if (newPlaylistState.playOrder === PLAY_ORDER_SHUFFLE) {\n          newPlaylistState.shuffledList = shuffle(newPlaylistState.orderedList)\n          newPlaylistState.shuffledIndexOfPlaying = newPlaylistState.shuffledList.indexOf(songId)\n        }\n        newPlaylistState.playing = songId\n      } else {\n        if (newPlaylistState.playOrder === PLAY_ORDER_SHUFFLE) {\n          newPlaylistState.shuffledList = shuffle(newPlaylistState.orderedList)\n          newPlaylistState.shuffledIndexOfPlaying = 0\n          newPlaylistState.playing = newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n          newPlaylistState.orderedIndexOfPlaying = newPlaylistState.orderedList.indexOf(newPlaylistState.playing)\n        } else {\n          newPlaylistState.orderedIndexOfPlaying = 0\n          newPlaylistState.playing = newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying]\n        }\n      }\n      newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function clearPlaylist () {\n  return {\n    type: CLEAR_PLAYLIST\n  }\n}\n","import { SET_SPEED, SET_VOLUME } from '../actions'\n\nconst initialState = {\n  volume: 1,\n  speed: 1\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_VOLUME:\n      return {\n        ...state,\n        volume: action.payload\n      }\n    case SET_SPEED:\n      return {\n        ...state,\n        speed: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import { cloneDeep, Song } from '../helpers'\nimport { CLEAR_PLAYLIST, SET_PLAYLIST, UPDATE_SONG } from '../actions'\nimport { PLAY_ORDER_LOOP } from '../constants'\n\nconst initialState = {\n  songs: {},\n  orderedList: [],\n  orderedIndexOfPlaying: null,\n  shuffledList: [],\n  shuffledIndexOfPlaying: null,\n  historyList: [],\n  playing: null,\n  playOrder: PLAY_ORDER_LOOP\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PLAYLIST:\n      return cloneDeep(action.payload)\n    case UPDATE_SONG: {\n      const newSong = cloneDeep(action.payload)\n      const newSongs = cloneDeep(state.songs)\n      newSongs[Song.id(newSong)] = newSong\n      return {\n        ...cloneDeep(state),\n        songs: newSongs\n      }\n    }\n    case CLEAR_PLAYLIST:\n      return {\n        ...cloneDeep(initialState),\n        playOrder: state.playOrder\n      }\n    default:\n      return state\n  }\n}\n","import { cloneDeep, Song } from '../helpers'\nimport {\n  CLEAR_PLAYLIST,\n  NEXT_SRC,\n  PAUSE,\n  PLAY,\n  SET_BUFFERED_TIME,\n  SET_CURRENT_TIME,\n  SET_PLAYLIST, SET_TIMES,\n  SET_TOTAL_TIME, UPDATE_SONG\n} from '../actions'\n\nconst initialState = {\n  src: '',\n  srcIndex: 0,\n  song: null,\n  currentTime: 0,\n  totalTime: 0,\n  bufferedTime: null,\n  paused: true\n}\n\nexport { initialState as initialPlayingState }\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CLEAR_PLAYLIST:\n      return cloneDeep(initialState)\n    case SET_PLAYLIST:\n      return {\n        ...state,\n        song: action.payload.playing\n          ? cloneDeep(action.payload.songs[action.payload.playing]) : null,\n        src: action.payload.playing\n          ? action.payload.songs[action.payload.playing].src instanceof Array\n            ? action.payload.songs[action.payload.playing].src[0]\n            : action.payload.songs[action.payload.playing].src\n          : '',\n        srcIndex: 0\n      }\n    case UPDATE_SONG:\n      return {\n        ...state,\n        song: state.song\n          ? Song.id(state.song) === Song.id(action.payload)\n            ? cloneDeep(action.payload) : cloneDeep(state.song)\n          : null\n      }\n    case NEXT_SRC: {\n      const srcId = state.srcIndex + 1\n      return {\n        ...cloneDeep(state),\n        srcIndex: srcId,\n        src: state.song.src[srcId]\n      }\n    }\n    case SET_CURRENT_TIME:\n      return {\n        ...cloneDeep(state),\n        currentTime: action.payload\n      }\n    case SET_TOTAL_TIME:\n      return {\n        ...cloneDeep(state),\n        totalTime: action.payload\n      }\n    case SET_BUFFERED_TIME:\n      return {\n        ...cloneDeep(state),\n        bufferedTime: cloneDeep(action.payload)\n      }\n    case SET_TIMES:\n      return {\n        ...cloneDeep(state),\n        currentTime: action.payload.currentTime,\n        totalTime: action.payload.totalTime,\n        bufferedTime: cloneDeep(action.payload.bufferedTime)\n      }\n    case PAUSE:\n      return {\n        ...cloneDeep(state),\n        paused: true\n      }\n    case PLAY:\n      return {\n        ...cloneDeep(state),\n        paused: false\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport { cloneDeep } from '../helpers'\nimport player from './player'\nimport playlist from './playlist'\nimport playing, { initialPlayingState } from './playing'\n\nexport default combineReducers({\n  player,\n  playing,\n  playlist\n})\n\nexport function saveState (state) {\n  const exportedState = cloneDeep(state)\n  delete exportedState.playing\n  return exportedState\n}\n\nexport function loadState (state) {\n  const importedState = cloneDeep(state)\n  importedState.playing = initialPlayingState\n  importedState.playing.song = importedState.playlist.playing\n    ? importedState.playlist.songs[importedState.playlist.playing] : null\n  importedState.playing.src = importedState.playing.song\n    ? importedState.playing.song.src instanceof Array\n      ? importedState.playing.song.src[0]\n      : importedState.playing.song.src\n    : null\n  return importedState\n}\n","import { applyMiddleware, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { version } from '../package'\nimport reducers, { loadState, saveState } from './reducers'\nimport {\n  autoNext, clearPlaylist, next, nextPlayOrder,\n  nextSrc,\n  pause,\n  play, previous, removeSong,\n  setBufferedTime, setCurrentSong, setCurrentTime, setNextSong,\n  setPlaylist, setPlayOrder,\n  setSpeed, setTimes,\n  setTotalTime,\n  setVolume, updateSong\n} from './actions'\nimport { Song, TimeRanges } from './helpers'\n\nexport class Kokoro {\n  get ref () {\n    return this._ref\n  }\n\n  get store () {\n    return this._store\n  }\n\n  get _dispatch () {\n    return this._store.dispatch\n  }\n\n  get getState () {\n    return this._store.getState\n  }\n\n  get destroyed () {\n    return this._destroyed || false\n  }\n\n  get version () {\n    return version\n  }\n\n  constructor (initializeState) {\n    this._store = initializeState\n      ? createStore(reducers, loadState(initializeState), composeWithDevTools(applyMiddleware(thunk)))\n      : createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))\n\n    this._ref = new window.Audio()\n\n    this._ref.addEventListener('canplay', () => {\n      this._dispatch(setBufferedTime(TimeRanges.toArray(this._ref.buffered)))\n    })\n    this._ref.addEventListener('canplaythrough', () => {\n      this._dispatch(setBufferedTime(TimeRanges.toArray(this._ref.buffered)))\n    })\n    this._ref.addEventListener('durationchange', () => {\n      this._dispatch(setTotalTime(this._ref.duration))\n    })\n    this._ref.addEventListener('ended', () => {\n      this._dispatch(autoNext())\n      this._onSrcProbablyChanged()\n      this._triggerPlay()\n    })\n    this._ref.addEventListener('error', () => {\n      const state = this.getState()\n      if (state.playing.song === null) return\n      if (state.playing.song.src instanceof Array &&\n        state.playing.srcIndex + 1 < state.playing.song.src.length) {\n        this._dispatch(nextSrc())\n      } else {\n        this._dispatch(autoNext())\n      }\n      this._onSrcProbablyChanged()\n      if (!state.playing.paused) this._triggerPlay()\n    })\n    this._ref.addEventListener('loadedmetadata', () => {\n      this._dispatch(setTotalTime(this._ref.duration))\n    })\n    this._ref.addEventListener('pause', () => {\n      this._dispatch(pause())\n    })\n    this._ref.addEventListener('play', () => {\n      this._dispatch(play())\n    })\n    this._ref.addEventListener('progress', () => {\n      this._dispatch(setBufferedTime(TimeRanges.toArray(this._ref.buffered)))\n    })\n    this._ref.addEventListener('ratechange', () => {\n      this._dispatch(setSpeed(this._ref.playbackRate))\n    })\n    this._ref.addEventListener('timeupdate', () => {\n      this._dispatch(setTimes({\n        currentTime: this._ref.currentTime,\n        totalTime: this._ref.duration,\n        bufferedTime: TimeRanges.toArray(this._ref.buffered)\n      }))\n    })\n    this._ref.addEventListener('volumechange', () => {\n      if (this._ref.muted) this._dispatch(setVolume(0))\n      else this._dispatch(setVolume(this._ref.volume))\n    })\n\n    this._listeners = []\n  }\n\n  destroy () {\n    this._destroyed = true\n    for (const item of this._listeners) {\n      item.unsub()\n    }\n    this._listeners = []\n    this.unmount()\n    this._ref.removeAttribute('src')\n    this._ref.load()\n  }\n\n  subscribe (listener) {\n    const o = this._listeners.find(item => item.listener === listener)\n    if (o) {\n      return o.unsub\n    }\n    const unsub = this._store.subscribe(() => listener(this.getState()))\n    this._listeners.push({\n      listener,\n      unsub\n    })\n    return unsub\n  }\n\n  unsubscribe (listener) {\n    const o = this._listeners.find(item => item.listener === listener)\n    if (o) {\n      o.unsub()\n      this._listeners = this._listeners.filter(item => item.listener !== listener)\n    }\n  }\n\n  dumpState () {\n    return saveState(this.getState())\n  }\n\n  mount (parentNode, id) {\n    if (typeof parentNode === 'string' || id) {\n      this._ref.id = typeof parentNode === 'string'\n        ? parentNode : id\n    }\n    const parent = parentNode instanceof window.HTMLElement\n      ? parentNode : document.body\n    parent.appendChild(this._ref)\n  }\n\n  unmount () {\n    this._ref.remove()\n  }\n\n  _onSrcProbablyChanged () {\n    const state = this.getState()\n    if (Song.id(state.playing) !== Song.id(this._ref)) {\n      if (state.playing.src) this._ref.src = state.playing.src\n      else {\n        this._ref.removeAttribute('src')\n        this._ref.load()\n      }\n    }\n  }\n\n  _triggerPlay () {\n    this._ref.currentTime = 0\n    this._ref.play()\n  }\n\n  pause () {\n    this._ref.pause()\n  }\n\n  play () {\n    this._ref.play()\n  }\n\n  togglePlay () {\n    const state = this.getState()\n    if (state.playing.paused) {\n      this._ref.play()\n    } else this._ref.pause()\n  }\n\n  setCurrentTime (time) {\n    this._ref.currentTime = time\n    this._dispatch(setCurrentTime(time))\n  }\n\n  next () {\n    this._dispatch(next())\n    this._onSrcProbablyChanged()\n    this._triggerPlay()\n  }\n\n  previous () {\n    this._dispatch(previous())\n    this._onSrcProbablyChanged()\n    this._triggerPlay()\n  }\n\n  setPlayOrder (playOrder) {\n    this._dispatch(setPlayOrder(playOrder))\n  }\n\n  nextPlayOrder () {\n    this._dispatch(nextPlayOrder())\n  }\n\n  setCurrentSong (song) {\n    this._dispatch(setCurrentSong(song))\n    this._onSrcProbablyChanged()\n    this._triggerPlay()\n  }\n\n  setNextSong (song) {\n    this._dispatch(setNextSong(song))\n    this._onSrcProbablyChanged()\n  }\n\n  removeSong (song) {\n    this._dispatch(removeSong(song))\n    this._onSrcProbablyChanged()\n  }\n\n  setPlaylist (songs, currentSong, playOrder) {\n    this._dispatch(setPlaylist(songs, currentSong, playOrder))\n    this._onSrcProbablyChanged()\n  }\n\n  clearPlaylist () {\n    this._dispatch(clearPlaylist())\n    this._onSrcProbablyChanged()\n  }\n\n  updateSong (song) {\n    this._dispatch(updateSong(song))\n  }\n\n  setVolume (volume) {\n    this._dispatch(setVolume(volume))\n    this._ref.volume = volume\n  }\n\n  setSpeed (speedRate) {\n    this._dispatch(setSpeed(speedRate))\n    this._ref.playbackRate = speedRate\n  }\n}\n\nexport default Kokoro\n\nexport * from './constants'\nexport * as actions from './actions'\nexport * as helpers from './helpers'\n"],"sourceRoot":""}