{"version":3,"sources":["webpack://kokoro/webpack/universalModuleDefinition","webpack://kokoro/webpack/bootstrap","webpack://kokoro/./src/constants.js","webpack://kokoro/./src/actions/player.js","webpack://kokoro/./src/actions/playing.js","webpack://kokoro/./src/actions/playlist.js","webpack://kokoro/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PLAY_ORDER_SINGLE","PLAY_ORDER_SHUFFLE","PLAY_ORDER","SET_VOLUME","SET_SPEED","setVolume","volume","type","payload","setSpeed","speed","PAUSE","PLAY","TOGGLE_PLAY","SET_CURRENT_TIME","pause","play","togglePlay","setCurrentTime","time","SET_PLAYLIST","CLEAR_PLAYLIST","shuffle","original","shuffled","sort","Math","random","createSetPlaylistAction","pushHistory","historyList","song","newHistoryList","historyIndex","indexOf","splice","unshift","id","src","Array","setPlayOrder","playOrder","dispatch","getState","playlist","newPlaylistState","shuffledList","orderedList","shuffledIndexOfPlaying","playing","nextPlayOrder","currentPlayOrder","currentPlayOrderIndex","nextPlayOrderIndex","length","next","push","orderedIndexOfPlaying","autoNext","previous","setCurrentSong","songId","songs","setNextSong","orderedIndex","removeSong","orderedIndexReduction","slice","filter","item","shuffledIndexReduction","setPlaylist","currentSong","clearPlaylist","defaultOptions","storageKey","audioTagId","Kokoro","options","op","assign","this","_storageKey","_mount","_ref","_destroyed","_unmount","document","createElement","body","appendChild","remove"],"mappings":"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","file":"kokoro.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kokoro\"] = factory();\n\telse\n\t\troot[\"kokoro\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const LYRICS_TYPE_LRC = 'lrc'\nexport const LYRICS_TYPE_L2C = 'l2c'\nexport const PLAY_ORDER_LOOP = 'PLAY_ORDER_LOOP'\nexport const PLAY_ORDER_SINGLE = 'PLAY_ORDER_SINGLE'\nexport const PLAY_ORDER_SHUFFLE = 'PLAY_ORDER_SHUFFLE'\nexport const PLAY_ORDER = [\n  PLAY_ORDER_LOOP,\n  PLAY_ORDER_SHUFFLE,\n  PLAY_ORDER_SINGLE\n]\n","export const SET_VOLUME = 'SET_VOLUME'\nexport const SET_SPEED = 'SET_SPEED'\n\nexport function setVolume (volume) {\n  return {\n    type: SET_VOLUME,\n    payload: volume\n  }\n}\n\nexport function setSpeed (speed) {\n  return {\n    type: SET_SPEED,\n    payload: speed\n  }\n}\n","export const PAUSE = 'PAUSE'\nexport const PLAY = 'PLAY'\nexport const TOGGLE_PLAY = 'TOGGLE_PLAY'\nexport const SET_CURRENT_TIME = 'SET_CURRENT_TIME'\n\nexport function pause () {\n  return {\n    type: PAUSE\n  }\n}\n\nexport function play () {\n  return {\n    type: PLAY\n  }\n}\n\nexport function togglePlay () {\n  return {\n    type: TOGGLE_PLAY\n  }\n}\n\nexport function setCurrentTime (time) {\n  return {\n    type: SET_CURRENT_TIME,\n    payload: time\n  }\n}\n","import { PLAY_ORDER, PLAY_ORDER_SHUFFLE, PLAY_ORDER_SINGLE } from '../constants'\n\nexport const SET_PLAYLIST = 'SET_PLAYLIST'\nexport const CLEAR_PLAYLIST = 'CLEAR_PLAYLIST'\n\nfunction shuffle (original) {\n  const shuffled = [...original]\n  shuffled.sort(() => (Math.random() - 0.5))\n  return shuffled\n}\n\nfunction createSetPlaylistAction (payload) {\n  return {\n    type: SET_PLAYLIST,\n    payload\n  }\n}\n\nfunction pushHistory (historyList, song) {\n  const newHistoryList = [...historyList]\n  const historyIndex = historyList.indexOf(song)\n  if (historyIndex !== -1) {\n    newHistoryList.splice(historyIndex, 1)\n  }\n  newHistoryList.unshift(song)\n  return newHistoryList\n}\n\nfunction id (song) {\n  return song.src instanceof Array\n    ? song.src[0]\n    : song.src\n}\n\nexport function setPlayOrder (playOrder) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = {\n      ...playlist,\n      playOrder\n    }\n    if (playOrder === PLAY_ORDER_SHUFFLE) {\n      const shuffledList = shuffle(playlist.orderedList)\n      const shuffledIndexOfPlaying = shuffledList.indexOf(playlist.playing)\n      newPlaylistState.shuffledList = shuffledList\n      newPlaylistState.shuffledIndexOfPlaying = shuffledIndexOfPlaying\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function nextPlayOrder () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const currentPlayOrder = playlist.playOrder\n    const currentPlayOrderIndex = PLAY_ORDER.indexOf(currentPlayOrder)\n    const nextPlayOrderIndex = currentPlayOrderIndex + 1 >= PLAY_ORDER.length ? 0 : currentPlayOrderIndex + 1\n    const nextPlayOrder = PLAY_ORDER[nextPlayOrderIndex]\n    setPlayOrder(nextPlayOrder)(dispatch, getState)\n  }\n}\n\nexport function next () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n      if (playlist.shuffledIndexOfPlaying + 1 === playlist.shuffledList.length) {\n        newPlaylistState.shuffledList.push(...shuffle(playlist.orderedList))\n      }\n      newPlaylistState.shuffledIndexOfPlaying++\n      newPlaylistState.playing = newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n      newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.indexOf(newPlaylistState.playing)\n    } else {\n      if (playlist.orderedIndexOfPlaying + 1 === playlist.orderedList.length) {\n        newPlaylistState.orderedIndexOfPlaying = 0\n      } else {\n        newPlaylistState.orderedIndexOfPlaying++\n      }\n      newPlaylistState.playing = newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying]\n    }\n    newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function autoNext () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    if (playlist.playOrder === PLAY_ORDER_SINGLE) {\n      dispatch(createSetPlaylistAction(playlist))\n    } else {\n      next()(dispatch, getState)\n    }\n  }\n}\n\nexport function previous () {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n      if (playlist.shuffledIndexOfPlaying - 1 === -1) {\n        newPlaylistState.shuffledList.unshift(...shuffle(playlist.orderedList))\n        newPlaylistState.shuffledIndexOfPlaying += playlist.orderedList\n      }\n      newPlaylistState.shuffledIndexOfPlaying--\n      newPlaylistState.playing = newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n      newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.indexOf(newPlaylistState.playing)\n    } else {\n      if (playlist.orderedIndexOfPlaying - 1 === -1) {\n        newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.length - 1\n      } else {\n        newPlaylistState.orderedIndexOfPlaying--\n      }\n      newPlaylistState.playing = newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying]\n    }\n    newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function setCurrentSong (song) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    let songId\n    if (typeof song === 'number') {\n      songId = playlist.orderedList[song]\n    } else if (typeof song === 'string') {\n      songId = song\n    } else {\n      songId = id(song)\n      newPlaylistState.songs[songId] = song\n      if (playlist.orderedList.indexOf(songId) === -1) {\n        newPlaylistState.orderedList.splice(\n          newPlaylistState.orderedIndexOfPlaying + 1, 0, songId\n        )\n      }\n    }\n    newPlaylistState.playing = songId\n    newPlaylistState.orderedIndexOfPlaying = playlist.orderedList.indexOf(songId)\n    if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n      newPlaylistState.shuffledList = shuffle(newPlaylistState.orderedList)\n      newPlaylistState.shuffledIndexOfPlaying = newPlaylistState.shuffledList.indexOf(songId)\n    }\n    newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function setNextSong (song) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    let songId\n    if (typeof song === 'number') {\n      songId = playlist.orderedList[song]\n    } else if (typeof song === 'string') {\n      songId = song\n    } else {\n      songId = id(song)\n      newPlaylistState.songs[songId] = song\n    }\n    if (songId !== playlist.playing) {\n      const orderedIndex = playlist.orderedList.indexOf(songId)\n      if (orderedIndex !== -1) {\n        newPlaylistState.orderedList.splice(orderedIndex, 1)\n      }\n      newPlaylistState.orderedList.splice(\n        newPlaylistState.orderedIndexOfPlaying + 1, 0, songId\n      )\n      if (playlist.playOrder === PLAY_ORDER_SHUFFLE &&\n        !(playlist.shuffledIndexOfPlaying + 1 < playlist.shuffledList.length &&\n          playlist.shuffledList[playlist.shuffledIndexOfPlaying + 1] === songId\n        )\n      ) {\n        newPlaylistState.shuffledList.splice(playlist.shuffledIndexOfPlaying + 1, 0, songId)\n      }\n    }\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function removeSong (song) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = { ...playlist }\n    let songId\n    if (typeof song === 'number') {\n      songId = playlist.orderedList[song]\n    } else if (typeof song === 'string') {\n      songId = song\n    } else {\n      songId = id(song)\n    }\n    const orderedIndexReduction = playlist.orderedList.slice(0, playlist.orderedIndexOfPlaying)\n      .filter(item => item === songId).length\n    newPlaylistState.orderedList = playlist.orderedList.filter(item => item !== songId)\n    if (playlist.playOrder === PLAY_ORDER_SHUFFLE) {\n      const shuffledIndexReduction = playlist.shuffledList.slice(0, playlist.shuffledIndexOfPlaying)\n        .filter(item => item === songId).length\n      newPlaylistState.shuffledList = playlist.shuffledList.filter(item => item !== songId)\n      newPlaylistState.shuffledIndexOfPlaying = playlist.shuffledIndexOfPlaying - shuffledIndexReduction\n      newPlaylistState.orderedIndexOfPlaying = newPlaylistState.orderedList.indexOf(\n        newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n      )\n    } else {\n      newPlaylistState.orderedIndexOfPlaying = playlist.orderedIndexOfPlaying - orderedIndexReduction\n    }\n    newPlaylistState.playing = newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying]\n    newPlaylistState.historyList = pushHistory(playlist.historyList, newPlaylistState.playing)\n    dispatch(createSetPlaylistAction(newPlaylistState))\n  }\n}\n\nexport function setPlaylist (songs, currentSong, playOrder) {\n  return (dispatch, getState) => {\n    const { playlist } = getState()\n    const newPlaylistState = {\n      ...playlist,\n      songs: {},\n      orderedList: [],\n      orderedIndexOfPlaying: null,\n      shuffledList: [],\n      shuffledIndexOfPlaying: null,\n      playing: null,\n      playOrder: playOrder || playlist.playOrder\n    }\n    for (const song of songs) {\n      const songId = id(song)\n      newPlaylistState.songs[songId] = song\n      newPlaylistState.orderedList.push(songId)\n    }\n    if (newPlaylistState.orderedList.length) {\n      if (currentSong) {\n        let songId\n        if (typeof currentSong === 'number') {\n          songId = newPlaylistState.orderedList[currentSong]\n        } else if (typeof currentSong === 'string') {\n          songId = currentSong\n        } else {\n          songId = id(currentSong)\n        }\n        newPlaylistState.orderedIndexOfPlaying = newPlaylistState.orderedList.indexOf(songId)\n        if (newPlaylistState.playOrder === PLAY_ORDER_SHUFFLE) {\n          newPlaylistState.shuffledList = shuffle(newPlaylistState.orderedList)\n          newPlaylistState.shuffledIndexOfPlaying = newPlaylistState.shuffledList.indexOf(songId)\n          newPlaylistState.playing = songId\n        }\n      } else {\n        if (newPlaylistState.playOrder === PLAY_ORDER_SHUFFLE) {\n          newPlaylistState.shuffledList = shuffle(newPlaylistState.orderedList)\n          newPlaylistState.shuffledIndexOfPlaying = 0\n          newPlaylistState.playing = newPlaylistState.shuffledList[newPlaylistState.shuffledIndexOfPlaying]\n          newPlaylistState.orderedIndexOfPlaying = newPlaylistState.orderedList.indexOf(newPlaylistState.playing)\n        } else {\n          newPlaylistState.orderedIndexOfPlaying = 0\n          newPlaylistState.playing = newPlaylistState.orderedList[newPlaylistState.orderedIndexOfPlaying]\n        }\n      }\n    }\n  }\n}\n\nexport function clearPlaylist () {\n  return {\n    type: CLEAR_PLAYLIST\n  }\n}\n","const defaultOptions = {\n  storageKey: 'kokoro-store',\n  audioTagId: 'kokoro-sevice'\n}\n\nexport class Kokoro {\n  get ref () {\n    return this._ref\n  }\n\n  constructor (options) {\n    const op = Object.assign({}, defaultOptions, options)\n    this._storageKey = op.storageKey\n    this._mount(op.audioTagId)\n  }\n\n  destroy () {\n    this._destroyed = true\n    this._unmount()\n  }\n\n  _mount (id) {\n    this._ref = document.createElement('audio')\n    if (id) this._ref.id = id\n    document.body.appendChild(this._ref)\n  }\n\n  _unmount () {\n    this._ref.remove()\n  }\n}\n\nexport default Kokoro\n\nexport * from './constants'\nexport * as actions from './actions'\n"],"sourceRoot":""}